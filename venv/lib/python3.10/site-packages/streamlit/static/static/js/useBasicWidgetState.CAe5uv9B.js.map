{"version":3,"file":"useBasicWidgetState.CAe5uv9B.js","sources":["../../../../lib/src/hooks/useBasicWidgetState.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\"\n\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport { useFormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { isNullOrUndefined } from \"@streamlit/lib/src/util/utils\"\n\nexport type ValueWithSource<T> = {\n  value: T\n} & Source\n\n// Interface for a proto that has a .formId\ninterface ValueElementProtoInterface {\n  formId: string\n}\n\ninterface BaseArgs<\n  T, // Type of the value stored in WidgetStateManager.\n  P extends ValueElementProtoInterface // Proto for this widget.\n> {\n  // Important: these callback functions need to have stable references! So\n  // either declare them at the module level or wrap in useCallback.\n  getStateFromWidgetMgr: (wm: WidgetStateManager, el: P) => T | undefined\n  updateWidgetMgrState: (\n    el: P,\n    wm: WidgetStateManager,\n    vws: ValueWithSource<T>,\n    fragmentId?: string\n  ) => void\n  element: P\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n  onFormCleared?: () => void\n}\n\nexport interface UseBasicWidgetClientStateArgs<\n  T, // Type of the value stored in WidgetStateManager.\n  P extends ValueElementProtoInterface // Proto for this widget.\n> extends BaseArgs<T, P> {\n  // Important: these callback functions need to have stable references! So\n  // either declare them at the module level or wrap in useCallback.\n  getDefaultState: (wm: WidgetStateManager, el: P) => T\n}\n\n/**\n * A React hook that makes the simplest kinds of widgets very easy to implement.\n * Use the clientState version when the widget does not have a .setValue on its\n * proto, otherwise utilize `useBasicWidgetState`.\n */\nexport function useBasicWidgetClientState<\n  T, // Type of the value stored in WidgetStateManager.\n  P extends ValueElementProtoInterface // Proto for this widget.\n>({\n  getStateFromWidgetMgr,\n  getDefaultState,\n  updateWidgetMgrState,\n  element,\n  widgetMgr,\n  fragmentId,\n  onFormCleared,\n}: UseBasicWidgetClientStateArgs<T, P>): [\n  T,\n  Dispatch<SetStateAction<ValueWithSource<T> | null>>\n] {\n  const [currentValue, setCurrentValue] = useState<T>(() => {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value.\n    return (\n      getStateFromWidgetMgr(widgetMgr, element) ??\n      getDefaultState(widgetMgr, element)\n    )\n  })\n\n  // This acts as an \"event\":\n  // - It's null most of the time\n  // - It only has a value the moment when the user calls setValue (internally\n  //   called setNextValueWithSource). And then it's immediately set to null\n  //   internally.\n  const [nextValueWithSource, setNextValueWithSource] =\n    useState<ValueWithSource<T> | null>({\n      value: currentValue,\n      fromUi: false,\n    })\n\n  // When someone calls setNextValueWithSource, update internal state and tell\n  // widget manager to update its state too.\n  useEffect(() => {\n    if (isNullOrUndefined(nextValueWithSource)) return\n    setNextValueWithSource(null) // Clear \"event\".\n\n    setCurrentValue(nextValueWithSource.value)\n    updateWidgetMgrState(element, widgetMgr, nextValueWithSource, fragmentId)\n  }, [\n    nextValueWithSource,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  ])\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  const handleFormCleared = useCallback((): void => {\n    setNextValueWithSource({\n      value: getDefaultState(widgetMgr, element),\n      fromUi: true,\n    })\n    onFormCleared?.()\n  }, [\n    setNextValueWithSource,\n    element,\n    getDefaultState,\n    widgetMgr,\n    onFormCleared,\n  ])\n\n  // Manage our form-clear event handler.\n  useFormClearHelper({ widgetMgr, element, onFormCleared: handleFormCleared })\n\n  return [currentValue, setNextValueWithSource]\n}\n\n// Interface for a proto that has a setValue, and .formId\ninterface ValueElementProtoInterfaceWithSetValue\n  extends ValueElementProtoInterface {\n  setValue: boolean\n}\n\nexport interface UseBasicWidgetStateArgs<\n  T, // Type of the value stored in WidgetStateManager.\n  P extends ValueElementProtoInterfaceWithSetValue // Proto for this widget.\n> extends BaseArgs<T, P> {\n  // Important: these callback functions need to have stable references! So\n  // either declare them at the module level or wrap in useCallback.\n  getDefaultStateFromProto: (el: P) => T\n  getCurrStateFromProto: (el: P) => T\n}\n\n/**\n * A React hook that makes the simplest kinds of widgets very easy to implement.\n */\nexport function useBasicWidgetState<\n  T, // Type of the value stored in WidgetStateManager.\n  P extends ValueElementProtoInterfaceWithSetValue // Proto for this widget.\n>({\n  getStateFromWidgetMgr,\n  getDefaultStateFromProto,\n  getCurrStateFromProto,\n  updateWidgetMgrState,\n  element,\n  widgetMgr,\n  fragmentId,\n  onFormCleared,\n}: UseBasicWidgetStateArgs<T, P>): [\n  T,\n  Dispatch<SetStateAction<ValueWithSource<T> | null>>\n] {\n  const getDefaultState = useCallback<(wm: WidgetStateManager, el: P) => T>(\n    (wm, el) => {\n      return getDefaultStateFromProto(el)\n    },\n    [getDefaultStateFromProto]\n  )\n\n  const [currentValue, setNextValueWithSource] = useBasicWidgetClientState({\n    getStateFromWidgetMgr,\n    getDefaultState,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n    onFormCleared,\n  })\n\n  // Respond to value changes via session_state. This is also set via an\n  // \"event\", this time using the .setValue property of the proto.\n  useEffect(() => {\n    if (!element.setValue) return\n    // TODO: Update to match React best practices\n    // eslint-disable-next-line react-compiler/react-compiler\n    element.setValue = false // Clear \"event\".\n\n    setNextValueWithSource({\n      value: getCurrStateFromProto(element),\n      fromUi: false,\n    })\n  }, [element, getCurrStateFromProto, setNextValueWithSource])\n\n  return [currentValue, setNextValueWithSource]\n}\n"],"names":["useBasicWidgetClientState","getStateFromWidgetMgr","getDefaultState","updateWidgetMgrState","element","widgetMgr","fragmentId","onFormCleared","currentValue","setCurrentValue","useState","nextValueWithSource","setNextValueWithSource","value","fromUi","useEffect","isNullOrUndefined","handleFormCleared","useCallback","useFormClearHelper","useBasicWidgetState","getDefaultStateFromProto","getCurrStateFromProto","wm","el","setValue"],"mappings":"iGAyEgBA,SAAAA,EAGd,CACAC,sBAAAA,EACAC,gBAAAA,EACAC,qBAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,cAAAA,GACoC,CAIpC,KAAM,CAACC,EAAcC,CAAgB,EAAGC,WAAY,IAIhDT,EAAsBI,EAAWD,CACjCF,GAAAA,EAAgBG,EAAWD,CAAAA,CAE/B,EAOM,CAACO,EAAqBC,CAAuB,EACjDF,WAAoC,CAClCG,MAAOL,EACPM,OAAQ,EAAA,CACV,EAIFC,EAAAA,UAAU,IAAA,CACJC,EAAkBL,CAAsB,IAC5CC,EAAuB,MAEvBH,EAAgBE,EAAoBE,KAAK,EACpBT,EAAAA,EAASC,EAAWM,EAAqBL,CAAAA,EAAAA,EAC7D,CACDK,EACAR,EACAC,EACAC,EACAC,CAAAA,CACD,EAMKW,MAAAA,EAAoBC,EAAAA,YAAY,IAAA,CACbN,EAAA,CACrBC,MAAOX,EAAgBG,EAAWD,CAAAA,EAClCU,OAAQ,EAAA,CACV,EACAP,GAAAA,MAAAA,GAAAA,EACC,CACDK,EACAR,EACAF,EACAG,EACAE,CAAAA,CACD,EAGkB,OAAAY,EAAA,CAAEd,UAAAA,EAAWD,QAAAA,EAASG,cAAeU,CAAAA,CAAkB,EAEnE,CAACT,EAAcI,CAAAA,CACxB,CAqBgBQ,SAAAA,EAGd,CACAnB,sBAAAA,EACAoB,yBAAAA,EACAC,sBAAAA,EACAnB,qBAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,cAAAA,GAC8B,CAI9B,MAAML,EAAkBgB,EAAAA,YACtB,CAACK,EAAIC,IACIH,EAAyBG,CAAAA,EAElC,CAACH,CAAAA,CAAyB,EAGtB,CAACb,EAAcI,CAAuB,EAAGZ,EAA0B,CACvEC,sBAAAA,EACAC,gBAAAA,EACAC,qBAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,cAAAA,CAAAA,CACF,EAIAQ,OAAAA,EAAAA,UAAU,IAAA,CACHX,EAAQqB,WAGbrB,EAAQqB,SAAW,GAEIb,EAAA,CACrBC,MAAOS,EAAsBlB,CAAAA,EAC7BU,OAAQ,EAAA,CACV,EAAA,EACC,CAACV,EAASkB,EAAuBV,CAAAA,CAAuB,EAEpD,CAACJ,EAAcI,CAAAA,CACxB"}