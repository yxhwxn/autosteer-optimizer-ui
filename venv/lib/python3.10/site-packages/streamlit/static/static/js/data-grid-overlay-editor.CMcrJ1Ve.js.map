{"version":3,"file":"data-grid-overlay-editor.CMcrJ1Ve.js","sources":["../../../../node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor-style.js","../../../../node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/use-stay-on-screen.js","../../../../node_modules/@glideapps/glide-data-grid/dist/esm/internal/data-grid-overlay-editor/data-grid-overlay-editor.js"],"sourcesContent":["import { styled } from \"@linaria/react\";\nconst _exp2 = /*#__PURE__*/() => p => p.targetX;\nconst _exp3 = /*#__PURE__*/() => p => p.targetY;\nconst _exp4 = /*#__PURE__*/() => p => p.targetWidth;\nconst _exp5 = /*#__PURE__*/() => p => p.targetHeight;\nconst _exp6 = /*#__PURE__*/() => p => p.targetY + 10;\nconst _exp7 = /*#__PURE__*/() => p => Math.max(0, (p.targetHeight - 28) / 2);\nexport const DataGridOverlayEditorStyle = /*#__PURE__*/styled('div')({\n  name: \"DataGridOverlayEditorStyle\",\n  class: \"gdg-d19meir1\",\n  propsAsIs: false,\n  vars: {\n    \"d19meir1-0\": [_exp3(), \"px\"],\n    \"d19meir1-1\": [_exp2(), \"px\"],\n    \"d19meir1-2\": [_exp4(), \"px\"],\n    \"d19meir1-3\": [_exp5(), \"px\"],\n    \"d19meir1-4\": [_exp6(), \"px\"],\n    \"d19meir1-5\": [_exp7(), \"px\"]\n  }\n});\n\n","import * as React from \"react\";\nfunction useRefState() {\n    const [refState, setRefState] = React.useState();\n    return [refState ?? undefined, setRefState];\n}\nexport function useStayOnScreen() {\n    const [ref, setRef] = useRefState();\n    const [xOffset, setXOffset] = React.useState(0);\n    const [isIntersecting, setIsIntersecting] = React.useState(true);\n    React.useLayoutEffect(() => {\n        if (ref === undefined)\n            return;\n        if (!(\"IntersectionObserver\" in window))\n            return;\n        const observer = new IntersectionObserver(ents => {\n            if (ents.length === 0)\n                return;\n            setIsIntersecting(ents[0].isIntersecting);\n        }, { threshold: 1 });\n        observer.observe(ref);\n        return () => observer.disconnect();\n    }, [ref]);\n    React.useEffect(() => {\n        if (isIntersecting || ref === undefined)\n            return;\n        let rafHandle;\n        const fn = () => {\n            const { right: refRight } = ref.getBoundingClientRect();\n            setXOffset(cv => Math.min(cv + window.innerWidth - refRight - 10, 0));\n            rafHandle = requestAnimationFrame(fn);\n        };\n        rafHandle = requestAnimationFrame(fn);\n        return () => {\n            if (rafHandle !== undefined) {\n                cancelAnimationFrame(rafHandle);\n            }\n        };\n    }, [ref, isIntersecting]);\n    const style = React.useMemo(() => {\n        return { transform: `translateX(${xOffset}px)` };\n    }, [xOffset]);\n    return {\n        ref: setRef,\n        style,\n    };\n}\n//# sourceMappingURL=use-stay-on-screen.js.map","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport ClickOutsideContainer from \"../click-outside-container/click-outside-container.js\";\nimport { makeCSSStyle, ThemeContext } from \"../../common/styles.js\";\nimport { isEditableGridCell, isInnerOnlyCell, isObjectEditorCallbackResult, } from \"../data-grid/data-grid-types.js\";\nimport { DataGridOverlayEditorStyle } from \"./data-grid-overlay-editor-style.js\";\nimport { useStayOnScreen } from \"./use-stay-on-screen.js\";\nconst DataGridOverlayEditor = p => {\n    const { target, content, onFinishEditing: onFinishEditingIn, forceEditMode, initialValue, imageEditorOverride, markdownDivCreateNode, highlight, className, theme, id, cell, bloom, validateCell, getCellRenderer, provideEditor, isOutsideClick, } = p;\n    const [tempValue, setTempValueRaw] = React.useState(forceEditMode ? content : undefined);\n    const lastValueRef = React.useRef(tempValue ?? content);\n    lastValueRef.current = tempValue ?? content;\n    const [isValid, setIsValid] = React.useState(() => {\n        if (validateCell === undefined)\n            return true;\n        return !(isEditableGridCell(content) && validateCell?.(cell, content, lastValueRef.current) === false);\n    });\n    const onFinishEditing = React.useCallback((newCell, movement) => {\n        onFinishEditingIn(isValid ? newCell : undefined, movement);\n    }, [isValid, onFinishEditingIn]);\n    const setTempValue = React.useCallback((newVal) => {\n        if (validateCell !== undefined && newVal !== undefined && isEditableGridCell(newVal)) {\n            const validResult = validateCell(cell, newVal, lastValueRef.current);\n            if (validResult === false) {\n                setIsValid(false);\n            }\n            else if (typeof validResult === \"object\") {\n                newVal = validResult;\n                setIsValid(true);\n            }\n            else {\n                setIsValid(true);\n            }\n        }\n        setTempValueRaw(newVal);\n    }, [cell, validateCell]);\n    const finished = React.useRef(false);\n    const customMotion = React.useRef(undefined);\n    const onClickOutside = React.useCallback(() => {\n        onFinishEditing(tempValue, [0, 0]);\n        finished.current = true;\n    }, [tempValue, onFinishEditing]);\n    const onEditorFinished = React.useCallback((newValue, movement) => {\n        onFinishEditing(newValue, movement ?? customMotion.current ?? [0, 0]);\n        finished.current = true;\n    }, [onFinishEditing]);\n    const onKeyDown = React.useCallback(async (event) => {\n        let save = false;\n        if (event.key === \"Escape\") {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [0, 0];\n        }\n        else if (event.key === \"Enter\" && !event.shiftKey) {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [0, 1];\n            save = true;\n        }\n        else if (event.key === \"Tab\") {\n            event.stopPropagation();\n            event.preventDefault();\n            customMotion.current = [event.shiftKey ? -1 : 1, 0];\n            save = true;\n        }\n        window.setTimeout(() => {\n            if (!finished.current && customMotion.current !== undefined) {\n                onFinishEditing(save ? tempValue : undefined, customMotion.current);\n                finished.current = true;\n            }\n        }, 0);\n    }, [onFinishEditing, tempValue]);\n    const targetValue = tempValue ?? content;\n    const [editorProvider, useLabel] = React.useMemo(() => {\n        if (isInnerOnlyCell(content))\n            return [];\n        const external = provideEditor?.(content);\n        if (external !== undefined)\n            return [external, false];\n        return [getCellRenderer(content)?.provideEditor?.(content), false];\n    }, [content, getCellRenderer, provideEditor]);\n    const { ref, style: stayOnScreenStyle } = useStayOnScreen();\n    let pad = true;\n    let editor;\n    let style = true;\n    let styleOverride;\n    if (editorProvider !== undefined) {\n        pad = editorProvider.disablePadding !== true;\n        style = editorProvider.disableStyling !== true;\n        const isObjectEditor = isObjectEditorCallbackResult(editorProvider);\n        if (isObjectEditor) {\n            styleOverride = editorProvider.styleOverride;\n        }\n        const CustomEditor = isObjectEditor ? editorProvider.editor : editorProvider;\n        editor = (React.createElement(CustomEditor, { isHighlighted: highlight, onChange: setTempValue, value: targetValue, initialValue: initialValue, onFinishedEditing: onEditorFinished, validatedSelection: isEditableGridCell(targetValue) ? targetValue.selectionRange : undefined, forceEditMode: forceEditMode, target: target, imageEditorOverride: imageEditorOverride, markdownDivCreateNode: markdownDivCreateNode, isValid: isValid, theme: theme }));\n    }\n    styleOverride = { ...styleOverride, ...stayOnScreenStyle };\n    // Consider imperatively creating and adding the element to the dom?\n    const portalElement = document.getElementById(\"portal\");\n    if (portalElement === null) {\n        // eslint-disable-next-line no-console\n        console.error('Cannot open Data Grid overlay editor, because portal not found.  Please add `<div id=\"portal\" />` as the last child of your `<body>`.');\n        return null;\n    }\n    let classWrap = style ? \"gdg-style\" : \"gdg-unstyle\";\n    if (!isValid) {\n        classWrap += \" gdg-invalid\";\n    }\n    if (pad) {\n        classWrap += \" gdg-pad\";\n    }\n    const bloomX = bloom?.[0] ?? 1;\n    const bloomY = bloom?.[1] ?? 1;\n    return createPortal(React.createElement(ThemeContext.Provider, { value: theme },\n        React.createElement(ClickOutsideContainer, { style: makeCSSStyle(theme), className: className, onClickOutside: onClickOutside, isOutsideClick: isOutsideClick },\n            React.createElement(DataGridOverlayEditorStyle, { ref: ref, id: id, className: classWrap, style: styleOverride, as: useLabel === true ? \"label\" : undefined, targetX: target.x - bloomX, targetY: target.y - bloomY, targetWidth: target.width + bloomX * 2, targetHeight: target.height + bloomY * 2 },\n                React.createElement(\"div\", { className: \"gdg-clip-region\", onKeyDown: onKeyDown }, editor)))), portalElement);\n};\nexport default DataGridOverlayEditor;\n//# sourceMappingURL=data-grid-overlay-editor.js.map"],"names":["_exp2","p","_exp3","_exp4","_exp5","_exp6","_exp7","DataGridOverlayEditorStyle","styled","useRefState","refState","setRefState","React.useState","useStayOnScreen","ref","setRef","xOffset","setXOffset","isIntersecting","setIsIntersecting","React.useLayoutEffect","observer","ents","React.useEffect","rafHandle","fn","refRight","cv","style","React.useMemo","DataGridOverlayEditor","target","content","onFinishEditingIn","forceEditMode","initialValue","imageEditorOverride","markdownDivCreateNode","highlight","className","theme","id","cell","bloom","validateCell","getCellRenderer","provideEditor","isOutsideClick","tempValue","setTempValueRaw","lastValueRef","React.useRef","isValid","setIsValid","isEditableGridCell","onFinishEditing","React.useCallback","newCell","movement","setTempValue","newVal","validResult","finished","customMotion","onClickOutside","onEditorFinished","newValue","onKeyDown","event","save","targetValue","editorProvider","useLabel","isInnerOnlyCell","external","_b","_a","stayOnScreenStyle","pad","editor","styleOverride","isObjectEditor","isObjectEditorCallbackResult","CustomEditor","React.createElement","portalElement","classWrap","bloomX","bloomY","createPortal","ThemeContext","ClickOutsideContainer","makeCSSStyle"],"mappings":"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","x_google_ignoreList":[0,1,2]}