{"version":3,"file":"index.BQReiN30.js","sources":["../../../../lib/src/components/widgets/ColorPicker/ColorPicker.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback } from \"react\"\n\nimport { ColorPicker as ColorPickerProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport BaseColorPicker from \"@streamlit/lib/src/components/shared/BaseColorPicker\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"@streamlit/lib/src/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: ColorPickerProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\n/**\n * The value specified by the user via the UI. If the user didn't touch this\n * widget's UI, the default value is used.\n */\ntype ColorPickerValue = string\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: ColorPickerProto\n): ColorPickerValue | undefined => {\n  return widgetMgr.getStringValue(element)\n}\n\nconst getDefaultStateFromProto = (\n  element: ColorPickerProto\n): ColorPickerValue => {\n  return element.default ?? null\n}\n\nconst getCurrStateFromProto = (\n  element: ColorPickerProto\n): ColorPickerValue => {\n  return element.value ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: ColorPickerProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<ColorPickerValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setStringValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst ColorPicker: FC<Props> = ({\n  element,\n  disabled,\n  widgetMgr,\n  width,\n  fragmentId,\n}) => {\n  const [value, setValueWithSource] = useBasicWidgetState<\n    ColorPickerValue,\n    ColorPickerProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const handleColorClose = useCallback(\n    (color: string): void => {\n      setValueWithSource({ value: color, fromUi: true })\n    },\n    [setValueWithSource]\n  )\n\n  return (\n    <BaseColorPicker\n      label={element.label}\n      labelVisibility={labelVisibilityProtoValueToEnum(\n        element.labelVisibility?.value\n      )}\n      help={element.help}\n      onChange={handleColorClose}\n      disabled={disabled}\n      width={width}\n      value={value}\n    />\n  )\n}\n\nexport default memo(ColorPicker)\n"],"names":["getStateFromWidgetMgr","widgetMgr","element","getStringValue","getDefaultStateFromProto","default","getCurrStateFromProto","value","updateWidgetMgrState","valueWithSource","fragmentId","setStringValue","fromUi","ColorPicker","disabled","width","setValueWithSource","useBasicWidgetState","handleColorClose","useCallback","color","BaseColorPicker","label","labelVisibility","labelVisibilityProtoValueToEnum","help","onChange","ColorPicker$1"],"mappings":"2JAyCA,MAAMA,EAAwB,CAC5BC,EACAC,IAEOD,EAAUE,eAAeD,CAAAA,EAG5BE,EACJF,GAEOA,EAAQG,SAAW,KAGtBC,EACJJ,GAEOA,EAAQK,OAAS,KAGpBC,EAAuB,CAC3BN,EACAD,EACAQ,EACAC,IAAAA,CAEUC,EAAAA,eACRT,EACAO,EAAgBF,MAChB,CAAEK,OAAQH,EAAgBG,QAC1BF,CAAAA,CAEJ,EAEMG,EAAyB,CAAC,CAC9BX,QAAAA,EACAY,SAAAA,EACAb,UAAAA,EACAc,MAAAA,EACAL,WAAAA,KACD,OACC,KAAM,CAACH,EAAOS,CAAmB,EAAGC,EAGlC,CACAjB,sBAAAA,EACAI,yBAAAA,EACAE,sBAAAA,EACAE,qBAAAA,EACAN,QAAAA,EACAD,UAAAA,EACAS,WAAAA,CAAAA,CACF,EAEMQ,EAAmBC,cACtBC,GAAAA,CACoBJ,EAAA,CAAET,MAAOa,EAAOR,OAAQ,EAAA,CAAK,CAAA,EAElD,CAACI,CAAAA,CAAmB,EAGtB,SACGK,EAAAA,CACCC,MAAOpB,EAAQoB,MACfC,gBAAiBC,GACftB,EAAAA,EAAQqB,kBAARrB,YAAAA,EAAyBK,KAAAA,EAE3BkB,KAAMvB,EAAQuB,KACdC,SAAUR,EACVJ,SAAAA,EACAC,MAAAA,EACAR,MAAAA,CAAAA,EAGN,EAEAoB,SAAoBd,CAAY"}