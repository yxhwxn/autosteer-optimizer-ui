{"version":3,"file":"withFullScreenWrapper.BE5Y_29x.js","sources":["../../../../lib/src/components/shared/FullScreenWrapper/styled-components.tsx","../../../../lib/src/components/shared/ElementFullscreen/ElementFullscreenContext.tsx","../../../../lib/src/hooks/useRequiredContext.tsx","../../../../lib/src/components/shared/ElementFullscreen/useFullscreen.tsx","../../../../lib/src/components/shared/ElementFullscreen/ElementFullscreenWrapper.tsx","../../../../lib/src/components/shared/FullScreenWrapper/withFullScreenWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport interface StyledFullScreenFrameProps {\n  isExpanded: boolean\n}\n\nexport const StyledFullScreenFrame = styled.div<StyledFullScreenFrameProps>(\n  ({ theme, isExpanded }) => ({\n    ...(isExpanded\n      ? {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          background: theme.colors.bgColor,\n          zIndex: theme.zIndices.fullscreenWrapper,\n          padding: theme.spacing.md,\n          paddingTop: theme.sizes.fullScreenHeaderHeight,\n          overflow: [\"auto\", \"overlay\"],\n          display: \"flex\", // To avoid extra spaces that lead to scrollbars.\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext } from \"react\"\n\ntype ElementFullscreenContextShape = {\n  width: number\n  height: number | undefined\n  expanded: boolean\n  expand: () => void\n  collapse: () => void\n}\n\nexport const ElementFullscreenContext =\n  createContext<ElementFullscreenContextShape | null>(null)\nElementFullscreenContext.displayName = \"ElementFullscreenContext\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, useContext } from \"react\"\n\nexport const useRequiredContext = <R,>(context: Context<R | null>): R => {\n  const foundContext = useContext(context)\n\n  if (foundContext === null || foundContext === undefined) {\n    throw new Error(\n      `useRequiredContext: ${context.displayName ?? \"context\"} not found`\n    )\n  }\n\n  return foundContext\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { WindowDimensionsContext } from \"@streamlit/lib/src/components/shared/WindowDimensions\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\n\nexport type UseEscapeToCollapseArgs = {\n  expanded: boolean\n  zoomOut: () => void\n}\n\nexport type UseFullscreenShape = {\n  expanded: boolean\n  fullHeight: number\n  fullWidth: number\n  zoomIn: () => void\n  zoomOut: () => void\n}\n\nexport const useFullscreen = (): UseFullscreenShape => {\n  const { setFullScreen } = useContext(LibContext)\n  const [expanded, setExpanded] = useState(false)\n  const { fullHeight, fullWidth } = useRequiredContext(WindowDimensionsContext)\n\n  const setExpandedState = useCallback(\n    (isExpanded: boolean) => {\n      // Set the local component-level state\n      setExpanded(isExpanded)\n      // Set the context-level state\n      setFullScreen(isExpanded)\n    },\n    [setFullScreen]\n  )\n\n  const zoomIn = useCallback(() => {\n    document.body.style.overflow = \"hidden\"\n    setExpandedState(true)\n  }, [setExpandedState])\n\n  const zoomOut = useCallback(() => {\n    // TODO: Update to match React best practices\n    // eslint-disable-next-line react-compiler/react-compiler\n    document.body.style.overflow = \"unset\"\n    setExpandedState(false)\n  }, [setExpandedState])\n\n  const controlKeys = useCallback(\n    (event: KeyboardEvent) => {\n      /**\n       * keyCode 27 is the ESC key\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n       */\n      if (event.keyCode === 27 && expanded) {\n        // Exit fullscreen\n        zoomOut()\n      }\n    },\n    [zoomOut, expanded]\n  )\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", controlKeys, false)\n\n    return () => {\n      document.removeEventListener(\"keydown\", controlKeys, false)\n    }\n  }, [controlKeys])\n\n  return useMemo(() => {\n    return { expanded, zoomIn, zoomOut, fullHeight, fullWidth }\n  }, [expanded, zoomIn, zoomOut, fullHeight, fullWidth])\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useMemo } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\n\nimport { StyledFullScreenFrame } from \"@streamlit/lib/src/components/shared/FullScreenWrapper/styled-components\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { useFullscreen } from \"./useFullscreen\"\n\ntype ElementFullscreenWrapperProps = PropsWithChildren<{\n  height?: number\n  width: number\n}>\n\nconst ElementFullscreenWrapper: FC<ElementFullscreenWrapperProps> = ({\n  children,\n  height,\n  width,\n}) => {\n  const theme: EmotionTheme = useTheme()\n  const { expanded, fullHeight, fullWidth, zoomIn, zoomOut } = useFullscreen()\n\n  const fullscreenContextValue = useMemo(() => {\n    return {\n      width: expanded ? fullWidth : width,\n      height: expanded ? fullHeight : height,\n      expanded,\n      expand: zoomIn,\n      collapse: zoomOut,\n    }\n  }, [expanded, fullHeight, fullWidth, height, width, zoomIn, zoomOut])\n\n  return (\n    <ElementFullscreenContext.Provider value={fullscreenContextValue}>\n      <StyledFullScreenFrame\n        isExpanded={expanded}\n        data-testid=\"stFullScreenFrame\"\n        theme={theme}\n      >\n        {children}\n      </StyledFullScreenFrame>\n    </ElementFullscreenContext.Provider>\n  )\n}\n\nexport default ElementFullscreenWrapper\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentType, ReactElement } from \"react\"\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\n\nimport ElementFullscreenWrapper from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenWrapper\"\n\nfunction withFullScreenWrapper<P extends { width: number }>(\n  WrappedComponent: ComponentType<React.PropsWithChildren<P>>\n): ComponentType<React.PropsWithChildren<P>> {\n  const ComponentWithFullScreenWrapper = (props: P): ReactElement => {\n    return (\n      <ElementFullscreenWrapper width={props.width}>\n        <WrappedComponent {...(props as P)}></WrappedComponent>\n      </ElementFullscreenWrapper>\n    )\n  }\n  ComponentWithFullScreenWrapper.displayName = `withFullScreenWrapper(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`\n\n  // Static methods must be copied over\n  // https://en.reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  return hoistNonReactStatics(ComponentWithFullScreenWrapper, WrappedComponent)\n}\n\nexport default withFullScreenWrapper\n"],"names":["StyledFullScreenFrame","styled","theme","isExpanded","position","top","left","bottom","right","background","colors","bgColor","zIndex","zIndices","fullscreenWrapper","padding","spacing","md","paddingTop","sizes","fullScreenHeaderHeight","overflow","display","alignItems","justifyContent","ElementFullscreenContext","displayName","useRequiredContext","context","foundContext","useContext","Error","useFullscreen","setFullScreen","LibContext","expanded","setExpanded","useState","fullHeight","fullWidth","WindowDimensionsContext","setExpandedState","useCallback","zoomIn","body","style","zoomOut","controlKeys","event","keyCode","useEffect","addEventListener","removeEventListener","useMemo","ElementFullscreenWrapper","children","height","width","useTheme","fullscreenContextValue","expand","collapse","_jsx","Provider","value","data-testid","withFullScreenWrapper","WrappedComponent","ComponentWithFullScreenWrapper","props","name","hoistNonReactStatics"],"mappings":"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"}