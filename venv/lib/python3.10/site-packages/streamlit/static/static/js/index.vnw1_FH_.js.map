{"version":3,"file":"index.vnw1_FH_.js","sources":["../../../../lib/src/components/widgets/Multiselect/styled-components.ts","../../../../lib/src/components/widgets/Multiselect/Multiselect.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledUISelect = styled.div(({ theme }) => ({\n  \"span[aria-disabled='true']\": {\n    background: theme.colors.fadedText05,\n  },\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback, useMemo } from \"react\"\n\nimport { ChevronDown } from \"baseui/icon\"\nimport {\n  OnChangeParams,\n  Option,\n  TYPE,\n  Select as UISelect,\n} from \"baseui/select\"\nimport without from \"lodash/without\"\nimport { isMobile } from \"react-device-detect\"\nimport { useTheme } from \"@emotion/react\"\n\nimport { VirtualDropdown } from \"@streamlit/lib/src/components/shared/Dropdown\"\nimport { fuzzyFilterSelectOptions } from \"@streamlit/lib/src/components/shared/Dropdown/Selectbox\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { StyledUISelect } from \"@streamlit/lib/src/components/widgets/Multiselect/styled-components\"\nimport { MultiSelect as MultiSelectProto } from \"@streamlit/lib/src/proto\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"@streamlit/lib/src/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: MultiSelectProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\ntype MultiselectValue = number[]\n\ninterface MultiselectOption {\n  label: string\n  value: string\n}\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: MultiSelectProto\n): MultiselectValue | undefined => {\n  return widgetMgr.getIntArrayValue(element)\n}\n\nconst getDefaultStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.default ?? null\n}\n\nconst getCurrStateFromProto = (\n  element: MultiSelectProto\n): MultiselectValue => {\n  return element.value ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: MultiSelectProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<MultiselectValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setIntArrayValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Multiselect: FC<Props> = props => {\n  const { element, widgetMgr, width, fragmentId } = props\n\n  const theme: EmotionTheme = useTheme()\n  const [value, setValueWithSource] = useBasicWidgetState<\n    MultiselectValue,\n    MultiSelectProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const overMaxSelections =\n    element.maxSelections > 0 && value.length >= element.maxSelections\n\n  const getNoResultsMsg = useMemo(() => {\n    if (element.maxSelections === 0) {\n      return \"No results\"\n    } else if (value.length === element.maxSelections) {\n      const option = element.maxSelections !== 1 ? \"options\" : \"option\"\n      return `You can only select up to ${element.maxSelections} ${option}. Remove an option first.`\n    }\n    return \"No results\"\n  }, [element.maxSelections, value.length])\n\n  const valueFromState = useMemo(() => {\n    return value.map(i => {\n      const label = element.options[i]\n      return { value: i.toString(), label }\n    })\n  }, [element.options, value])\n\n  const generateNewState = useCallback(\n    (data: OnChangeParams): MultiselectValue => {\n      const getIndex = (): number => {\n        const valueId = data.option?.value\n        return parseInt(valueId, 10)\n      }\n\n      switch (data.type) {\n        case \"remove\": {\n          return without(value, getIndex())\n        }\n        case \"clear\": {\n          return []\n        }\n        case \"select\": {\n          return value.concat([getIndex()])\n        }\n        default: {\n          throw new Error(`State transition is unknown: ${data.type}`)\n        }\n      }\n    },\n    [value]\n  )\n\n  const onChange = useCallback(\n    (params: OnChangeParams) => {\n      if (\n        element.maxSelections &&\n        params.type === \"select\" &&\n        value.length >= element.maxSelections\n      ) {\n        return\n      }\n      setValueWithSource({\n        value: generateNewState(params),\n        fromUi: true,\n      })\n    },\n    [element.maxSelections, generateNewState, setValueWithSource, value.length]\n  )\n\n  const filterOptions = useCallback(\n    (options: readonly Option[], filterValue: string): readonly Option[] => {\n      if (overMaxSelections) {\n        return []\n      }\n      // We need to manually filter for previously selected options here\n      const unselectedOptions = options.filter(\n        option => !value.includes(Number(option.value))\n      )\n\n      return fuzzyFilterSelectOptions(\n        unselectedOptions as MultiselectOption[],\n        filterValue\n      )\n    },\n    [overMaxSelections, value]\n  )\n\n  const style = { width }\n  const { options } = element\n  const disabled = options.length === 0 ? true : props.disabled\n  const placeholder =\n    options.length === 0 ? \"No options to select.\" : element.placeholder\n  const selectOptions: MultiselectOption[] = options.map(\n    (option: string, idx: number) => {\n      return {\n        label: option,\n        value: idx.toString(),\n      }\n    }\n  )\n\n  // Check if we have more than 10 options in the selectbox.\n  // If that's true, we show the keyboard on mobile. If not, we hide it.\n  const showKeyboardOnMobile = options.length > 10\n\n  return (\n    <div className=\"stMultiSelect\" data-testid=\"stMultiSelect\" style={style}>\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledUISelect>\n        <UISelect\n          options={selectOptions}\n          labelKey=\"label\"\n          valueKey=\"value\"\n          aria-label={element.label}\n          placeholder={placeholder}\n          type={TYPE.select}\n          multi\n          onChange={onChange}\n          value={valueFromState}\n          disabled={disabled}\n          size={\"compact\"}\n          noResultsMsg={getNoResultsMsg}\n          filterOptions={filterOptions}\n          closeOnSelect={false}\n          overrides={{\n            SelectArrow: {\n              component: ChevronDown,\n              props: {\n                overrides: {\n                  Svg: {\n                    style: () => ({\n                      width: theme.iconSizes.xl,\n                      height: theme.iconSizes.xl,\n                    }),\n                  },\n                },\n              },\n            },\n\n            IconsContainer: {\n              style: () => ({\n                paddingRight: theme.spacing.sm,\n              }),\n            },\n            ControlContainer: {\n              style: {\n                minHeight: theme.sizes.minElementHeight,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n            Placeholder: {\n              style: () => ({\n                flex: \"inherit\",\n                opacity: \"0.7\",\n              }),\n            },\n            ValueContainer: {\n              style: () => ({\n                paddingLeft: theme.spacing.sm,\n                paddingTop: theme.spacing.none,\n                paddingBottom: theme.spacing.none,\n                paddingRight: theme.spacing.none,\n              }),\n            },\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // setting this width and height makes the clear-icon align with dropdown arrows of other input fields\n                      padding: theme.spacing.threeXS,\n                      height: theme.sizes.clearIconSize,\n                      width: theme.sizes.clearIconSize,\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            SearchIcon: {\n              style: {\n                color: theme.colors.darkGray,\n              },\n            },\n            Tag: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      borderTopLeftRadius: theme.radii.md,\n                      borderTopRightRadius: theme.radii.md,\n                      borderBottomRightRadius: theme.radii.md,\n                      borderBottomLeftRadius: theme.radii.md,\n                      fontSize: theme.fontSizes.md,\n                      paddingLeft: theme.spacing.sm,\n                      marginLeft: theme.spacing.none,\n                      marginRight: theme.spacing.sm,\n                      // The tag height is derived from the minElementHeight\n                      // minus a top and bottom padding (2 * spacing.xs)\n                      // to nicely fit into the input field.\n                      height: `calc(${theme.sizes.minElementHeight} - 2 * ${theme.spacing.xs})`,\n                      maxWidth: `calc(100% - ${theme.spacing.lg})`,\n                    },\n                  },\n                  Action: {\n                    style: {\n                      paddingLeft: 0,\n                    },\n                  },\n                  ActionIcon: {\n                    props: {\n                      overrides: {\n                        Svg: {\n                          style: {\n                            // The action icon should be around 0.625% of the parent font size.\n                            width: \"0.625em\",\n                            height: \"0.625em\",\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            MultiValue: {\n              props: {\n                overrides: {\n                  Root: {\n                    style: {\n                      fontSize: theme.fontSizes.sm,\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                // Change the 'readonly' prop to hide the mobile keyboard if options < 10\n                readOnly:\n                  isMobile && showKeyboardOnMobile === false\n                    ? \"readonly\"\n                    : null,\n              },\n            },\n            Dropdown: { component: VirtualDropdown },\n          }}\n        />\n      </StyledUISelect>\n    </div>\n  )\n}\n\nexport default memo(Multiselect)\n"],"names":["StyledUISelect","styled","theme","background","colors","fadedText05","getStateFromWidgetMgr","widgetMgr","element","getIntArrayValue","getDefaultStateFromProto","default","getCurrStateFromProto","value","updateWidgetMgrState","valueWithSource","fragmentId","setIntArrayValue","fromUi","Multiselect","props","width","useTheme","setValueWithSource","useBasicWidgetState","overMaxSelections","maxSelections","length","getNoResultsMsg","useMemo","option","valueFromState","map","i","label","options","toString","generateNewState","useCallback","data","getIndex","valueId","parseInt","type","without","concat","Error","onChange","params","filterOptions","filterValue","unselectedOptions","filter","includes","Number","fuzzyFilterSelectOptions","style","disabled","placeholder","selectOptions","idx","showKeyboardOnMobile","div","className","data-testid","WidgetLabel","labelVisibility","labelVisibilityProtoValueToEnum","help","_jsx","StyledWidgetLabelHelp","TooltipIcon","content","placement","Placement","TOP_RIGHT","UISelect","labelKey","valueKey","aria-label","TYPE","select","multi","size","noResultsMsg","closeOnSelect","overrides","SelectArrow","component","ChevronDown","Svg","iconSizes","xl","height","IconsContainer","paddingRight","spacing","sm","ControlContainer","minHeight","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Placeholder","flex","opacity","ValueContainer","paddingLeft","paddingTop","none","paddingBottom","ClearIcon","color","darkGray","padding","threeXS","clearIconSize","fill","bodyText","SearchIcon","Tag","Root","borderTopLeftRadius","radii","md","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","fontSize","fontSizes","marginLeft","marginRight","xs","maxWidth","lg","Action","ActionIcon","MultiValue","Input","readOnly","isMobile","Dropdown","VirtualDropdown","Multiselect$1"],"mappings":"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"}