{"version":3,"file":"index.xtxr4PDF.js","sources":["../../../../lib/src/components/elements/ImageList/styled-components.ts","../../../../lib/src/components/elements/ImageList/ImageList.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledImageList = styled.div(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  // Not supported in Safari, but at least it's not a regression for those users:\n  rowGap: theme.spacing.lg,\n  maxWidth: \"100%\",\n  width: \"fit-content\",\n}))\n\nexport const StyledImageContainer = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"stretch\",\n  width: \"auto\",\n  flexGrow: 0,\n})\n\nexport const StyledCaption = styled.div(({ theme }) => ({\n  fontFamily: theme.genericFonts.bodyFont,\n  fontSize: theme.fontSizes.sm,\n  color: theme.colors.fadedText60,\n  textAlign: \"center\",\n  marginTop: theme.spacing.xs,\n  wordWrap: \"break-word\",\n  padding: theme.spacing.threeXS,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { CSSProperties, ReactElement } from \"react\"\n\nimport {\n  ImageList as ImageListProto,\n  Image as ImageProto,\n} from \"@streamlit/lib/src/proto\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport Toolbar, {\n  StyledToolbarElementContainer,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\n\nimport {\n  StyledCaption,\n  StyledImageContainer,\n  StyledImageList,\n} from \"./styled-components\"\n\nexport interface ImageListProps {\n  endpoints: StreamlitEndpoints\n  width: number\n  element: ImageListProto\n  disableFullscreenMode?: boolean\n}\n\n/**\n * @see WidthBehavior on the Backend\n * @see the Image.proto file\n */\nenum WidthBehavior {\n  OriginalWidth = -1,\n  /** @deprecated */\n  ColumnWidth = -2,\n  /** @deprecated */\n  AutoWidth = -3,\n  MinImageOrContainer = -4,\n  MaxImageOrContainer = -5,\n}\n\n/**\n * Functional element for a horizontal list of images.\n */\nfunction ImageList({\n  element,\n  width,\n  endpoints,\n  disableFullscreenMode,\n}: Readonly<ImageListProps>): ReactElement {\n  const {\n    expanded: isFullScreen,\n    width: fullScreenWidth,\n    height,\n    expand,\n    collapse,\n  } = useRequiredContext(ElementFullscreenContext)\n\n  // The width of the element is the width of the container, not necessarily the image.\n  const elementWidth: number = isFullScreen ? fullScreenWidth : width\n  // The width field in the proto sets the image width, but has special\n  // cases the values in the WidthBehavior enum.\n  let imageWidth: number | undefined\n  const protoWidth = element.width\n\n  if (\n    [\n      WidthBehavior.OriginalWidth,\n      WidthBehavior.AutoWidth,\n      WidthBehavior.MinImageOrContainer,\n    ].includes(protoWidth)\n  ) {\n    // Use the original image width.\n    imageWidth = undefined\n  } else if (\n    [WidthBehavior.ColumnWidth, WidthBehavior.MaxImageOrContainer].includes(\n      protoWidth\n    )\n  ) {\n    // Use the full element width (which handles the full screen case)\n    imageWidth = elementWidth\n  } else if (protoWidth > 0) {\n    // Set the image width explicitly.\n    imageWidth = protoWidth\n  } else {\n    throw Error(`Invalid image width: ${protoWidth}`)\n  }\n\n  const imgStyle: CSSProperties = {}\n\n  if (height && isFullScreen) {\n    imgStyle.maxHeight = height\n    imgStyle.objectFit = \"contain\"\n  } else {\n    imgStyle.width = imageWidth\n    // Cap the image width, so it doesn't exceed its parent container width\n    imgStyle.maxWidth = \"100%\"\n  }\n\n  return (\n    <StyledToolbarElementContainer\n      width={elementWidth}\n      height={height}\n      useContainerWidth={isFullScreen}\n      topCentered\n    >\n      <Toolbar\n        target={StyledToolbarElementContainer}\n        isFullScreen={isFullScreen}\n        onExpand={expand}\n        onCollapse={collapse}\n        disableFullscreenMode={disableFullscreenMode}\n      ></Toolbar>\n      <StyledImageList className=\"stImage\" data-testid=\"stImage\">\n        {element.imgs.map((iimage, idx): ReactElement => {\n          const image = iimage as ImageProto\n          return (\n            <StyledImageContainer data-testid=\"stImageContainer\" key={idx}>\n              <img\n                style={imgStyle}\n                src={endpoints.buildMediaURL(image.url)}\n                alt={idx.toString()}\n              />\n              {image.caption && (\n                <StyledCaption data-testid=\"stImageCaption\" style={imgStyle}>\n                  {` ${image.caption} `}\n                </StyledCaption>\n              )}\n            </StyledImageContainer>\n          )\n        })}\n      </StyledImageList>\n    </StyledToolbarElementContainer>\n  )\n}\n\nexport default withFullScreenWrapper(ImageList)\n"],"names":["StyledImageList","styled","theme","display","flexDirection","flexWrap","rowGap","spacing","lg","maxWidth","width","StyledImageContainer","alignItems","flexGrow","StyledCaption","fontFamily","genericFonts","bodyFont","fontSize","fontSizes","sm","color","colors","fadedText60","textAlign","marginTop","xs","wordWrap","padding","threeXS","WidthBehavior","ImageList","element","endpoints","disableFullscreenMode","expanded","isFullScreen","fullScreenWidth","height","expand","collapse","useRequiredContext","ElementFullscreenContext","elementWidth","imageWidth","protoWidth","includes","undefined","Error","imgStyle","maxHeight","objectFit","StyledToolbarElementContainer","useContainerWidth","topCentered","Toolbar","target","onExpand","onCollapse","className","data-testid","imgs","map","iimage","idx","image","img","style","src","buildMediaURL","url","alt","toString","caption","_jsx","withFullScreenWrapper"],"mappings":"8KAkBaA,MAAAA,IAAkBC,MAAAA,mBAAW,CAAA,EAAA,CAAC,CAAEC,MAAAA,MAAa,CACxDC,QAAS,OACTC,cAAe,MACfC,SAAU,OAEVC,OAAQJ,EAAMK,QAAQC,GACtBC,SAAU,OACVC,MAAO,aACT,EAAG,EAEUC,IAAuBV,MAAAA,mBAAW,CAAA,EAAA,CAC7CE,QAAS,OACTC,cAAe,SACfQ,WAAY,UACZF,MAAO,OACPG,SAAU,CACZ,CAAE,EAEWC,IAAgBb,MAAAA,mBAAW,CAAA,EAAA,CAAC,CAAEC,MAAAA,MAAa,CACtDa,WAAYb,EAAMc,aAAaC,SAC/BC,SAAUhB,EAAMiB,UAAUC,GAC1BC,MAAOnB,EAAMoB,OAAOC,YACpBC,UAAW,SACXC,UAAWvB,EAAMK,QAAQmB,GACzBC,SAAU,aACVC,QAAS1B,EAAMK,QAAQsB,OACzB,EAAG,SCGEC,SAAAA,EAAAA,uCAEaA,EAAAA,EAAA,YAAA,EAAA,EAAA,cAEAA,EAAAA,EAAA,UAAA,EAAA,EAAA,kHAJbA,IAAAA,EAAAA,CAAAA,EAAAA,EAaL,SAASC,EAAU,CACjBC,QAAAA,EACAtB,MAAAA,EACAuB,UAAAA,EACAC,sBAAAA,GACyB,CACnB,KAAA,CACJC,SAAUC,EACV1B,MAAO2B,EACPC,OAAAA,EACAC,OAAAA,EACAC,SAAAA,CAAAA,EACEC,EAAmBC,CAAAA,EAGjBC,EAAuBP,EAAeC,EAAkB3B,EAG1DkC,IAAAA,EACJ,MAAMC,EAAab,EAAQtB,MAGzB,GAAA,WAIEoC,SAASD,CACX,EAEaE,EAAAA,eAEb,QAA+DD,SAC7DD,CAEF,EAEaF,EAAAA,UACJE,EAAa,EAETA,EAAAA,MAEPG,OAAAA,MAAM,wBAAwBH,GAAY,EAGlD,MAAMI,EAA0B,CAAA,EAEhC,OAAIX,GAAUF,GACZa,EAASC,UAAYZ,EACrBW,EAASE,UAAY,YAErBF,EAASvC,MAAQkC,EAEjBK,EAASxC,SAAW,UAInB2C,EAAAA,CACC1C,MAAOiC,EACPL,OAAAA,EACAe,kBAAmBjB,EACnBkB,YAAW,eAEVC,EAAAA,CACCC,OAAQJ,EACRhB,aAAAA,EACAqB,SAAUlB,EACVmB,WAAYlB,EACZN,sBAAAA,CAAAA,KAEDlC,EAAAA,CAAgB2D,UAAU,UAAUC,cAAY,UAC9C5B,SAAAA,EAAQ6B,KAAKC,IAAI,CAACC,EAAQC,IAAAA,CACzB,MAAMC,EAAQF,EACd,SACGpD,EAAAA,CAAqBiD,cAAY,+BAC/BM,MAAAA,CACCC,MAAOlB,EACPmB,IAAKnC,EAAUoC,cAAcJ,EAAMK,GAAG,EACtCC,IAAKP,EAAIQ,SAAQ,CAAA,GAElBP,EAAMQ,SACLC,EAAC5D,EAAAA,CAAc8C,cAAY,iBAAiBO,MAAOlB,EAChD,SAAA,IAAIgB,EAAMQ,OAAO,GAAA,KARkCT,CAAAA,CAAAA,CAa9D,CAAA,KAIR,CAEA,MAAeW,EAAAA,EAAsB5C,CAAU"}