{"version":3,"file":"index.DO19EJPv.js","sources":["../../../../lib/src/components/widgets/Selectbox/Selectbox.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback } from \"react\"\n\nimport { Selectbox as SelectboxProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport UISelectbox from \"@streamlit/lib/src/components/shared/Dropdown\"\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n} from \"@streamlit/lib/src/util/utils\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"@streamlit/lib/src/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: SelectboxProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\n/**\n * The value specified by the user via the UI. If the user didn't touch this\n * widget's UI, the default value is used.\n */\ntype SelectboxValue = number | null\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: SelectboxProto\n): SelectboxValue | undefined => {\n  return widgetMgr.getIntValue(element)\n}\n\nconst getDefaultStateFromProto = (element: SelectboxProto): SelectboxValue => {\n  return element.default ?? null\n}\n\nconst getCurrStateFromProto = (element: SelectboxProto): SelectboxValue => {\n  return element.value ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: SelectboxProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<SelectboxValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setIntValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Selectbox: FC<Props> = ({\n  disabled,\n  element,\n  widgetMgr,\n  width,\n  fragmentId,\n}) => {\n  const { options, help, label, labelVisibility, placeholder } = element\n\n  const [value, setValueWithSource] = useBasicWidgetState<\n    SelectboxValue,\n    SelectboxProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const onChange = useCallback(\n    (value: SelectboxValue) => {\n      setValueWithSource({ value, fromUi: true })\n    },\n    [setValueWithSource]\n  )\n\n  const clearable = isNullOrUndefined(element.default) && !disabled\n\n  return (\n    <UISelectbox\n      label={label}\n      labelVisibility={labelVisibilityProtoValueToEnum(labelVisibility?.value)}\n      options={options}\n      disabled={disabled}\n      width={width}\n      onChange={onChange}\n      value={value}\n      help={help}\n      placeholder={placeholder}\n      clearable={clearable}\n    />\n  )\n}\n\nexport default memo(Selectbox)\n"],"names":["getStateFromWidgetMgr","widgetMgr","element","getIntValue","getDefaultStateFromProto","default","getCurrStateFromProto","value","updateWidgetMgrState","valueWithSource","fragmentId","setIntValue","fromUi","Selectbox","disabled","width","options","help","label","labelVisibility","placeholder","setValueWithSource","useBasicWidgetState","onChange","useCallback","clearable","isNullOrUndefined","UISelectbox","labelVisibilityProtoValueToEnum","Selectbox$1"],"mappings":"kKA4CA,MAAMA,EAAwB,CAC5BC,EACAC,IAEOD,EAAUE,YAAYD,CAAAA,EAGzBE,EAA4BF,GACzBA,EAAQG,SAAW,KAGtBC,EAAyBJ,GACtBA,EAAQK,OAAS,KAGpBC,EAAuB,CAC3BN,EACAD,EACAQ,EACAC,IAAAA,CAEUC,EAAAA,YACRT,EACAO,EAAgBF,MAChB,CAAEK,OAAQH,EAAgBG,QAC1BF,CAAAA,CAEJ,EAEMG,EAAuB,CAAC,CAC5BC,SAAAA,EACAZ,QAAAA,EACAD,UAAAA,EACAc,MAAAA,EACAL,WAAAA,KACD,CACC,KAAM,CAAEM,QAAAA,EAASC,KAAAA,EAAMC,MAAAA,EAAOC,gBAAAA,EAAiBC,YAAAA,CAAgBlB,EAAAA,EAEzD,CAACK,EAAOc,CAAmB,EAAGC,EAGlC,CACAtB,sBAAAA,EACAI,yBAAAA,EACAE,sBAAAA,EACAE,qBAAAA,EACAN,QAAAA,EACAD,UAAAA,EACAS,WAAAA,CAAAA,CACF,EAEMa,EAAWC,cACdjB,GAAAA,CACoBc,EAAA,CAAEd,MAAAA,EAAOK,OAAQ,EAAA,CAAK,CAAA,EAE3C,CAACS,CAAAA,CAAmB,EAGhBI,EAAYC,EAAkBxB,EAAQG,OAAO,GAAK,CAACS,EAEzD,SACGa,EAAAA,CACCT,MAAAA,EACAC,gBAAiBS,EAAgCT,GAAAA,YAAAA,EAAiBZ,KAAAA,EAClES,QAAAA,EACAF,SAAAA,EACAC,MAAAA,EACAQ,SAAAA,EACAhB,MAAAA,EACAU,KAAAA,EACAG,YAAAA,EACAK,UAAAA,CAAAA,EAGN,EAEAI,SAAoBhB,CAAU"}