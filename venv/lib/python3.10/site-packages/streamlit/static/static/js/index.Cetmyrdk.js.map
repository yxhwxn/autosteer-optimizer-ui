{"version":3,"file":"index.Cetmyrdk.js","sources":["../../../../lib/src/components/elements/Audio/Audio.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useEffect, useMemo, useRef } from \"react\"\n\nimport { Audio as AudioProto } from \"@streamlit/lib/src/proto\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport { WidgetStateManager as ElementStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nexport interface AudioProps {\n  endpoints: StreamlitEndpoints\n  width: number\n  element: AudioProto\n  elementMgr: ElementStateManager\n}\n\nexport default function Audio({\n  element,\n  width,\n  endpoints,\n  elementMgr,\n}: Readonly<AudioProps>): ReactElement {\n  const audioRef = useRef<HTMLAudioElement>(null)\n\n  const { startTime, endTime, loop, autoplay } = element\n\n  const preventAutoplay = useMemo<boolean>(() => {\n    if (!element.id) {\n      // Elements without an ID should never autoplay\n      return true\n    }\n\n    // Recover the state in case this component got unmounted\n    // and mounted again for the same element.\n    const preventAutoplay = elementMgr.getElementState(\n      element.id,\n      \"preventAutoplay\"\n    )\n\n    if (!preventAutoplay) {\n      // Set the state to prevent autoplay in case there is an unmount + mount\n      // for the same element.\n      elementMgr.setElementState(element.id, \"preventAutoplay\", true)\n    }\n    return preventAutoplay ?? false\n  }, [element.id, elementMgr])\n\n  // Handle startTime changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = startTime\n    }\n  }, [startTime])\n\n  useEffect(() => {\n    const audioNode = audioRef.current\n\n    const setStartTime: () => void = () => {\n      if (audioNode) {\n        // setStartTime\n        audioNode.currentTime = element.startTime\n      }\n    }\n\n    if (audioNode) {\n      audioNode.addEventListener(\"loadedmetadata\", setStartTime)\n    }\n\n    return () => {\n      if (audioNode) {\n        audioNode.removeEventListener(\"loadedmetadata\", setStartTime)\n      }\n    }\n  }, [element])\n\n  // Stop the audio at 'endTime' and handle loop\n  useEffect(() => {\n    const audioNode = audioRef.current\n    if (!audioNode) {\n      return\n    }\n\n    // Flag to avoid calling 'audioNode.pause()' multiple times\n    let stoppedByEndTime = false\n\n    const handleTimeUpdate = (): void => {\n      if (endTime > 0 && audioNode.currentTime >= endTime) {\n        if (loop) {\n          // If loop is true and we reached 'endTime', reset to 'startTime'\n          audioNode.currentTime = startTime || 0\n          audioNode.play()\n        } else if (!stoppedByEndTime) {\n          stoppedByEndTime = true\n          audioNode.pause()\n        }\n      }\n    }\n\n    if (endTime > 0) {\n      audioNode.addEventListener(\"timeupdate\", handleTimeUpdate)\n    }\n\n    return () => {\n      if (audioNode && endTime > 0) {\n        audioNode.removeEventListener(\"timeupdate\", handleTimeUpdate)\n      }\n    }\n  }, [endTime, loop, startTime])\n\n  // Handle looping the audio\n  useEffect(() => {\n    const audioNode = audioRef.current\n    if (!audioNode) {\n      return\n    }\n\n    // Loop the audio when it has ended\n    const handleAudioEnd = (): void => {\n      if (loop) {\n        audioNode.currentTime = startTime || 0 // Reset to startTime or to the start if not specified\n        audioNode.play()\n      }\n    }\n\n    audioNode.addEventListener(\"ended\", handleAudioEnd)\n\n    return () => {\n      if (audioNode) {\n        audioNode.removeEventListener(\"ended\", handleAudioEnd)\n      }\n    }\n  }, [loop, startTime])\n\n  const uri = endpoints.buildMediaURL(element.url)\n\n  return (\n    <audio\n      className=\"stAudio\"\n      data-testid=\"stAudio\"\n      ref={audioRef}\n      controls\n      autoPlay={autoplay && !preventAutoplay}\n      src={uri}\n      style={{ width }}\n    />\n  )\n}\n"],"names":["Audio","element","width","endpoints","elementMgr","audioRef","useRef","startTime","endTime","loop","autoplay","preventAutoplay","useMemo","id","getElementState","setElementState","useEffect","current","currentTime","audioNode","setStartTime","addEventListener","removeEventListener","stoppedByEndTime","handleTimeUpdate","play","pause","handleAudioEnd","uri","buildMediaURL","url","audio","className","data-testid","ref","controls","autoPlay","src","style"],"mappings":"+CA6BA,SAAwBA,EAAM,CAC5BC,QAAAA,EACAC,MAAAA,EACAC,UAAAA,EACAC,WAAAA,GACqB,CACfC,MAAAA,EAAWC,SAAyB,IAAA,EAEpC,CAAEC,UAAAA,EAAWC,QAAAA,EAASC,KAAAA,EAAMC,SAAAA,GAAaT,EAEzCU,EAAkBC,EAAAA,QAAiB,IAAA,CACnC,GAAA,CAACX,EAAQY,GAEJ,MAAA,GAKT,MAAMF,EAAkBP,EAAWU,gBACjCb,EAAQY,GACR,iBAAA,EAGF,OAAKF,GAGHP,EAAWW,gBAAgBd,EAAQY,GAAI,kBAAmB,EAAA,EAErDF,GAAmB,EAAA,EACzB,CAACV,EAAQY,GAAIT,CAAAA,CAAW,EAG3BY,EAAAA,UAAU,IAAA,CACJX,EAASY,UACXZ,EAASY,QAAQC,YAAcX,EACjC,EACC,CAACA,CAAAA,CAAU,EAEdS,EAAAA,UAAU,IAAA,CACR,MAAMG,EAAYd,EAASY,QAErBG,EAA2B,IAAA,CAC3BD,IAEFA,EAAUD,YAAcjB,EAAQM,UAClC,EAGF,OAAIY,GACQE,EAAAA,iBAAiB,iBAAkBD,CAAAA,EAGxC,IAAA,CACDD,GACQG,EAAAA,oBAAoB,iBAAkBF,CAAAA,CAClD,CACF,EACC,CAACnB,CAAAA,CAAQ,EAGZe,EAAAA,UAAU,IAAA,CACR,MAAMG,EAAYd,EAASY,QAC3B,GAAI,CAACE,EACH,OAIF,IAAII,EAAmB,GAEvB,MAAMC,EAAmB,IAAA,CACnBhB,EAAU,GAAKW,EAAUD,aAAeV,IACtCC,GAEFU,EAAUD,YAAcX,GAAa,EACrCY,EAAUM,KAAI,GACJF,IACSA,EAAA,GACnBJ,EAAUO,MAAK,GAEnB,EAGF,OAAIlB,EAAU,GACFa,EAAAA,iBAAiB,aAAcG,CAAAA,EAGpC,IAAA,CACDL,GAAaX,EAAU,GACfc,EAAAA,oBAAoB,aAAcE,CAAAA,CAC9C,CACF,EACC,CAAChB,EAASC,EAAMF,CAAAA,CAAU,EAG7BS,EAAAA,UAAU,IAAA,CACR,MAAMG,EAAYd,EAASY,QAC3B,GAAI,CAACE,EACH,OAIF,MAAMQ,EAAiB,IAAA,CACjBlB,IACFU,EAAUD,YAAcX,GAAa,EACrCY,EAAUM,KAAI,EAChB,EAGQJ,OAAAA,EAAAA,iBAAiB,QAASM,CAAAA,EAE7B,IAAA,CACDR,GACQG,EAAAA,oBAAoB,QAASK,CAAAA,CACzC,CACF,EACC,CAAClB,EAAMF,CAAAA,CAAU,EAEpB,MAAMqB,EAAMzB,EAAU0B,cAAc5B,EAAQ6B,GAAG,EAE/C,SACGC,QAAAA,CACCC,UAAU,UACVC,cAAY,UACZC,IAAK7B,EACL8B,SAAQ,GACRC,SAAU1B,GAAY,CAACC,EACvB0B,IAAKT,EACLU,MAAO,CAAEpC,MAAAA,CAAM,CAAA,EAGrB"}