{"version":3,"file":"index.CufE_0Gy.js","sources":["../../../../node_modules/@emotion-icons/open-iconic/Minus/Minus.esm.js","../../../../node_modules/@emotion-icons/open-iconic/Plus/Plus.esm.js","../../../../lib/src/components/widgets/NumberInput/styled-components.ts","../../../../lib/src/components/widgets/NumberInput/NumberInput.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Minus = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 8 8\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 3v2h8V3H0z\"\n  }));\n});\nMinus.displayName = 'Minus';\nexport var MinusDimensions = {\n  height: 8,\n  width: 8\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Plus = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 8 8\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 0v3H0v2h3v3h2V5h3V3H5V0H3z\"\n  }));\n});\nPlus.displayName = 'Plus';\nexport var PlusDimensions = {\n  height: 8,\n  width: 8\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledInputContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"nowrap\",\n  alignItems: \"center\",\n  height: theme.sizes.minElementHeight,\n  // Mimic the baseweb's borders here, so we can apply the focus style\n  // to the entire container and not only the input itself\n  borderWidth: theme.sizes.borderWidth,\n  borderStyle: \"solid\",\n  // Mimic the logic from createThemeOverrides.\n  borderColor:\n    theme.colors.widgetBorderColor ||\n    theme.colors.widgetBackgroundColor ||\n    theme.colors.bgColor,\n  transitionDuration: \"200ms\",\n  transitionProperty: \"border\",\n  transitionTimingFunction: \"cubic-bezier(0.2, 0.8, 0.4, 1)\",\n  borderRadius: theme.radii.default,\n  overflow: \"hidden\", // Fix rounded corner being overlayed with corner of internal input.\n\n  \"&.focused\": {\n    borderColor: theme.colors.primary,\n  },\n\n  input: {\n    MozAppearance: \"textfield\",\n    \"&::-webkit-inner-spin-button, &::-webkit-outer-spin-button\": {\n      WebkitAppearance: \"none\",\n      margin: theme.spacing.none,\n    },\n  },\n}))\n\nexport const StyledInputControls = styled.div({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignSelf: \"stretch\",\n})\n\nexport const StyledInputControl = styled.button(({ theme }) => ({\n  margin: theme.spacing.none,\n  border: \"none\",\n  height: theme.sizes.full,\n  display: \"flex\",\n  alignItems: \"center\",\n  width: theme.sizes.numberInputControlsWidth,\n  justifyContent: \"center\",\n  color: theme.colors.bodyText,\n  transition: \"color 300ms, backgroundColor 300ms\",\n  // Mimic the logic from createThemeOverrides.\n  backgroundColor:\n    theme.colors.widgetBackgroundColor || theme.colors.secondaryBg,\n  \"&:hover:enabled, &:focus:enabled\": {\n    color: theme.colors.white,\n    backgroundColor: theme.colors.primary,\n    transition: \"none\",\n    outline: \"none\",\n  },\n  \"&:active\": {\n    outline: \"none\",\n    border: \"none\",\n  },\n  \"&:last-of-type\": {\n    borderTopRightRadius: theme.radii.default,\n    borderBottomRightRadius: theme.radii.default,\n  },\n  \"&:disabled\": {\n    cursor: \"not-allowed\",\n    color: theme.colors.fadedText40,\n  },\n}))\n\nexport interface StyledInstructionsContainerProps {\n  // If widget is clearable, the instruction needs to be moved a couple\n  // pixels to the left to avoid overlapping with the clear button.\n  clearable: boolean\n}\n\nexport const StyledInstructionsContainer =\n  styled.div<StyledInstructionsContainerProps>(({ theme, clearable }) => ({\n    position: \"absolute\",\n    marginRight: theme.spacing.twoXS,\n    left: 0,\n    // The instructions should be placed after the two controls\n    // and the clear button if it's present.\n    right: `calc(${theme.sizes.numberInputControlsWidth} * 2 + ${\n      clearable ? \"1em\" : \"0em\"\n    })`,\n  }))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nimport { Minus, Plus } from \"@emotion-icons/open-iconic\"\nimport { withTheme } from \"@emotion/react\"\nimport { sprintf } from \"sprintf-js\"\nimport { Input as UIInput } from \"baseui/input\"\nimport uniqueId from \"lodash/uniqueId\"\n\nimport {\n  isInForm,\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { useFormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { logWarning } from \"@streamlit/lib/src/util/log\"\nimport { NumberInput as NumberInputProto } from \"@streamlit/lib/src/proto\"\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport {\n  StyledInputContainer,\n  StyledInputControl,\n  StyledInputControls,\n  StyledInstructionsContainer,\n} from \"./styled-components\"\n\n/**\n * Return a string property from an element. If the string is\n * null or empty, return undefined instead.\n */\nfunction getNonEmptyString(\n  value: string | null | undefined\n): string | undefined {\n  return isNullOrUndefined(value) || value === \"\" ? undefined : value\n}\n\n/**\n * This function returns the initial value for the NumberInput widget\n * via the widget manager.\n */\nconst getInitialValue = (\n  props: Pick<Props, \"element\" | \"widgetMgr\">\n): number | null => {\n  const isIntData = props.element.dataType === NumberInputProto.DataType.INT\n  const storedValue = isIntData\n    ? props.widgetMgr.getIntValue(props.element)\n    : props.widgetMgr.getDoubleValue(props.element)\n  return storedValue ?? props.element.default ?? null\n}\n\nconst getStep = ({\n  step,\n  dataType,\n}: Pick<NumberInputProto, \"step\" | \"dataType\">): number => {\n  if (step) {\n    return step\n  }\n  if (dataType === NumberInputProto.DataType.INT) {\n    return 1\n  }\n  return 0.01\n}\n\n/**\n * Utilizes the sprintf library to format a number value\n * according to a given format string.\n */\nexport const formatValue = ({\n  value,\n  format,\n  step,\n  dataType,\n}: {\n  value: number | null\n  format?: string | null\n  step?: number\n  dataType: NumberInputProto.DataType\n}): string | null => {\n  if (isNullOrUndefined(value)) {\n    return null\n  }\n\n  let formatString = getNonEmptyString(format)\n\n  if (isNullOrUndefined(formatString) && notNullOrUndefined(step)) {\n    const strStep = step.toString()\n    if (\n      dataType === NumberInputProto.DataType.FLOAT &&\n      step !== 0 &&\n      strStep.includes(\".\")\n    ) {\n      const decimalPlaces = strStep.split(\".\")[1].length\n      formatString = `%0.${decimalPlaces}f`\n    }\n  }\n\n  if (isNullOrUndefined(formatString)) {\n    return value.toString()\n  }\n\n  try {\n    return sprintf(formatString, value)\n  } catch (e) {\n    logWarning(`Error in sprintf(${formatString}, ${value}): ${e}`)\n    return String(value)\n  }\n}\n\nexport const canDecrement = (\n  value: number | null,\n  step: number,\n  min: number\n): boolean => {\n  if (isNullOrUndefined(value)) {\n    return false\n  }\n  return value - step >= min\n}\n\nexport const canIncrement = (\n  value: number | null,\n  step: number,\n  max: number\n): boolean => {\n  if (isNullOrUndefined(value)) {\n    return false\n  }\n  return value + step <= max\n}\n\nexport interface Props {\n  disabled: boolean\n  element: NumberInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\nexport const NumberInput: React.FC<Props> = ({\n  disabled,\n  element,\n  widgetMgr,\n  width,\n  theme,\n  fragmentId,\n}: Props): ReactElement => {\n  const {\n    dataType: elementDataType,\n    id: elementId,\n    formId: elementFormId,\n    default: elementDefault,\n    format: elementFormat,\n  } = element\n  const min = element.hasMin ? element.min : -Infinity\n  const max = element.hasMax ? element.max : +Infinity\n\n  const [step, setStep] = useState<number>(getStep(element))\n  const initialValue = getInitialValue({ element, widgetMgr })\n  const [dirty, setDirty] = useState(false)\n  const [value, setValue] = useState<number | null>(initialValue)\n  const [formattedValue, setFormattedValue] = useState<string | null>(\n    formatValue({ value: initialValue, ...element, step })\n  )\n  const [isFocused, setIsFocused] = useState(false)\n  const inputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n  const id = useRef(uniqueId(\"number_input_\"))\n\n  const canDec = canDecrement(value, step, min)\n  const canInc = canIncrement(value, step, max)\n\n  const inForm = isInForm({ formId: elementFormId })\n  // Allows form submission on Enter & displays Enter instructions, or if not in form and state is dirty\n  const allowEnterToSubmit = inForm\n    ? widgetMgr.allowFormEnterToSubmit(elementFormId)\n    : dirty\n  // Hide input instructions for small widget sizes.\n  const shouldShowInstructions =\n    isFocused && width > theme.breakpoints.hideWidgetDetails\n\n  // Update the step if the props change\n  useEffect(() => {\n    setStep(getStep({ step: element.step, dataType: element.dataType }))\n  }, [element.dataType, element.step])\n\n  const commitValue = useCallback(\n    ({ value, source }: { value: number | null; source: Source }) => {\n      if (notNullOrUndefined(value) && (min > value || value > max)) {\n        inputRef.current?.reportValidity()\n      } else {\n        const newValue = value ?? elementDefault ?? null\n\n        switch (elementDataType) {\n          case NumberInputProto.DataType.INT:\n            widgetMgr.setIntValue(\n              { id: elementId, formId: elementFormId },\n              newValue,\n              source,\n              fragmentId\n            )\n            break\n          case NumberInputProto.DataType.FLOAT:\n            widgetMgr.setDoubleValue(\n              { id: elementId, formId: elementFormId },\n              newValue,\n              source,\n              fragmentId\n            )\n            break\n          default:\n            throw new Error(\"Invalid data type\")\n        }\n\n        setDirty(false)\n        setValue(newValue)\n        setFormattedValue(\n          formatValue({\n            value: newValue,\n            dataType: elementDataType,\n            format: elementFormat,\n            step,\n          })\n        )\n      }\n    },\n    [\n      min,\n      max,\n      inputRef,\n      widgetMgr,\n      fragmentId,\n      step,\n      elementDataType,\n      elementId,\n      elementFormId,\n      elementDefault,\n      elementFormat,\n    ]\n  )\n\n  const onBlur = useCallback((): void => {\n    if (dirty) {\n      commitValue({ value, source: { fromUi: true } })\n    }\n    setIsFocused(false)\n  }, [dirty, value, commitValue])\n\n  const onFocus = useCallback((): void => {\n    setIsFocused(true)\n  }, [])\n\n  const updateFromProtobuf = useCallback((): void => {\n    const { value } = element\n    element.setValue = false\n    setValue(value ?? null)\n    setFormattedValue(formatValue({ value: value ?? null, ...element, step }))\n    commitValue({ value: value ?? null, source: { fromUi: false } })\n  }, [element, step, commitValue])\n\n  // on component mount, we want to update the value from protobuf if setValue is true, otherwise commit current value\n  useEffect(() => {\n    if (element.setValue) {\n      updateFromProtobuf()\n    } else {\n      commitValue({ value, source: { fromUi: false } })\n    }\n\n    // I don't want to run this effect on every render, only on mount.\n    // Additionally, it's okay if commitValue changes, because we only call\n    // it once in the beginning anyways.\n    // TODO: Update to match React best practices\n    // eslint-disable-next-line react-compiler/react-compiler\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [])\n\n  // update from protobuf whenever component updates if element.setValue is truthy\n  if (element.setValue) {\n    updateFromProtobuf()\n  }\n\n  const clearable = isNullOrUndefined(element.default) && !disabled\n\n  const onFormCleared = useCallback(() => {\n    const newValue = element.default ?? null\n    setValue(newValue)\n    commitValue({ value: newValue, source: { fromUi: true } })\n  }, [element])\n\n  useFormClearHelper({\n    element,\n    widgetMgr,\n    onFormCleared,\n  })\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    const { value } = e.target\n\n    if (value === \"\") {\n      setDirty(true)\n      setValue(null)\n      setFormattedValue(null)\n    } else {\n      let numValue: number\n\n      if (element.dataType === NumberInputProto.DataType.INT) {\n        numValue = parseInt(value, 10)\n      } else {\n        numValue = parseFloat(value)\n      }\n\n      setDirty(true)\n      setValue(numValue)\n      setFormattedValue(value)\n    }\n  }\n\n  const increment = useCallback(() => {\n    if (canInc) {\n      setDirty(true)\n      commitValue({ value: (value ?? min) + step, source: { fromUi: true } })\n    }\n  }, [value, min, step, canInc])\n\n  const decrement = useCallback(() => {\n    if (canDec) {\n      setDirty(true)\n      commitValue({ value: (value ?? max) - step, source: { fromUi: true } })\n    }\n  }, [value, max, step, canDec])\n\n  const onKeyDown = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n      const { key } = e\n\n      switch (key) {\n        case \"ArrowUp\":\n          e.preventDefault()\n          increment()\n          break\n        case \"ArrowDown\":\n          e.preventDefault()\n          decrement()\n          break\n        default:\n      }\n    },\n    [increment, decrement]\n  )\n\n  const onKeyPress = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n      if (e.key === \"Enter\") {\n        if (dirty) {\n          commitValue({ value, source: { fromUi: true } })\n        }\n        if (widgetMgr.allowFormEnterToSubmit(elementFormId)) {\n          widgetMgr.submitForm(elementFormId, fragmentId)\n        }\n      }\n    },\n    [dirty, value, commitValue, widgetMgr, elementFormId, fragmentId]\n  )\n\n  return (\n    <div\n      className=\"stNumberInput\"\n      data-testid=\"stNumberInput\"\n      style={{ width }}\n    >\n      <WidgetLabel\n        label={element.label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n        htmlFor={id.current}\n      >\n        {element.help && (\n          <StyledWidgetLabelHelp>\n            <TooltipIcon\n              content={element.help}\n              placement={Placement.TOP_RIGHT}\n            />\n          </StyledWidgetLabelHelp>\n        )}\n      </WidgetLabel>\n      <StyledInputContainer\n        className={isFocused ? \"focused\" : \"\"}\n        data-testid=\"stNumberInputContainer\"\n      >\n        <UIInput\n          type=\"number\"\n          inputRef={inputRef}\n          value={formattedValue ?? \"\"}\n          placeholder={element.placeholder}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          onKeyDown={onKeyDown}\n          clearable={clearable}\n          clearOnEscape={clearable}\n          disabled={disabled}\n          aria-label={element.label}\n          id={id.current}\n          overrides={{\n            ClearIconContainer: {\n              style: {\n                padding: 0,\n              },\n            },\n            ClearIcon: {\n              props: {\n                overrides: {\n                  Svg: {\n                    style: {\n                      color: theme.colors.darkGray,\n                      // setting this width and height makes the clear-icon align with dropdown arrows of other input fields\n                      padding: theme.spacing.threeXS,\n                      height: theme.sizes.clearIconSize,\n                      width: theme.sizes.clearIconSize,\n                      \":hover\": {\n                        fill: theme.colors.bodyText,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            Input: {\n              props: {\n                \"data-testid\": \"stNumberInputField\",\n                step: step,\n                min: min,\n                max: max,\n                // We specify the type as \"number\" to have numeric keyboard on mobile devices.\n                // We also set inputMode to \"\" since by default BaseWeb sets \"text\",\n                // and for \"decimal\" / \"numeric\" IOS shows keyboard without a minus sign.\n                type: \"number\",\n                inputMode: \"\",\n              },\n              style: {\n                lineHeight: theme.lineHeights.inputWidget,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingRight: theme.spacing.sm,\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n              },\n            },\n            InputContainer: {\n              style: () => ({\n                borderTopRightRadius: 0,\n                borderBottomRightRadius: 0,\n              }),\n            },\n            Root: {\n              style: {\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderTopRightRadius: 0,\n                borderBottomRightRadius: 0,\n                borderLeftWidth: 0,\n                borderRightWidth: 0,\n                borderTopWidth: 0,\n                borderBottomWidth: 0,\n                paddingRight: 0,\n              },\n            },\n          }}\n        />\n        {/* We only want to show the increment/decrement controls when there is sufficient room to display the value and these controls. */}\n        {width > theme.breakpoints.hideNumberInputControls && (\n          <StyledInputControls>\n            <StyledInputControl\n              data-testid=\"stNumberInputStepDown\"\n              onClick={decrement}\n              disabled={!canDec || disabled}\n              tabIndex={-1}\n            >\n              <Icon\n                content={Minus}\n                size=\"xs\"\n                color={canDec ? \"inherit\" : \"disabled\"}\n              />\n            </StyledInputControl>\n            <StyledInputControl\n              data-testid=\"stNumberInputStepUp\"\n              onClick={increment}\n              disabled={!canInc || disabled}\n              tabIndex={-1}\n            >\n              <Icon\n                content={Plus}\n                size=\"xs\"\n                color={canInc ? \"inherit\" : \"disabled\"}\n              />\n            </StyledInputControl>\n          </StyledInputControls>\n        )}\n      </StyledInputContainer>\n      {shouldShowInstructions && (\n        <StyledInstructionsContainer clearable={clearable}>\n          <InputInstructions\n            dirty={dirty}\n            value={formattedValue ?? \"\"}\n            inForm={inForm}\n            allowEnterToSubmit={allowEnterToSubmit}\n          />\n        </StyledInstructionsContainer>\n      )}\n    </div>\n  )\n}\n\nexport default withTheme(NumberInput)\n"],"names":["Minus","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","Plus","StyledInputContainer","styled","theme","display","flexDirection","flexWrap","alignItems","height","sizes","minElementHeight","borderWidth","borderStyle","borderColor","colors","widgetBorderColor","widgetBackgroundColor","bgColor","transitionDuration","transitionProperty","transitionTimingFunction","borderRadius","radii","default","overflow","primary","input","MozAppearance","WebkitAppearance","margin","spacing","none","StyledInputControls","alignSelf","StyledInputControl","border","full","width","numberInputControlsWidth","justifyContent","color","bodyText","transition","backgroundColor","secondaryBg","white","outline","borderTopRightRadius","borderBottomRightRadius","cursor","fadedText40","StyledInstructionsContainer","clearable","position","marginRight","twoXS","left","right","getNonEmptyString","value","isNullOrUndefined","undefined","getInitialValue","element","dataType","NumberInputProto","DataType","INT","widgetMgr","getIntValue","getDoubleValue","getStep","step","formatValue","format","formatString","notNullOrUndefined","strStep","toString","FLOAT","includes","split","length","decimalPlaces","sprintf","String","canDecrement","min","canIncrement","max","NumberInput","disabled","fragmentId","elementDataType","id","elementId","formId","elementFormId","elementDefault","elementFormat","hasMin","hasMax","setStep","useState","initialValue","dirty","setDirty","setValue","formattedValue","setFormattedValue","isFocused","setIsFocused","inputRef","useRef","uniqueId","canDec","canInc","inForm","isInForm","allowEnterToSubmit","allowFormEnterToSubmit","shouldShowInstructions","breakpoints","hideWidgetDetails","useEffect","commitValue","useCallback","source","current","reportValidity","newValue","setIntValue","setDoubleValue","Error","onBlur","fromUi","onFocus","updateFromProtobuf","onFormCleared","useFormClearHelper","onChange","e","target","numValue","parseInt","parseFloat","increment","decrement","onKeyDown","key","preventDefault","onKeyPress","submitForm","div","className","data-testid","style","WidgetLabel","label","labelVisibility","labelVisibilityProtoValueToEnum","htmlFor","help","_jsx","StyledWidgetLabelHelp","TooltipIcon","content","placement","Placement","TOP_RIGHT","UIInput","type","placeholder","clearOnEscape","aria-label","overrides","ClearIconContainer","padding","ClearIcon","Svg","darkGray","threeXS","clearIconSize","fill","Input","inputMode","lineHeight","lineHeights","inputWidget","paddingRight","sm","paddingLeft","paddingBottom","paddingTop","InputContainer","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","hideNumberInputControls","onClick","tabIndex","Icon","size","InputInstructions","withTheme"],"mappings":"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","x_google_ignoreList":[0,1]}