{"version":3,"file":"index.BgOJZdhd.js","sources":["../../../../lib/src/components/elements/Spinner/styled-components.ts","../../../../lib/src/components/elements/Spinner/Spinner.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport isPropValid from \"@emotion/is-prop-valid\"\nimport styled from \"@emotion/styled\"\nimport { Spinner } from \"baseui/spinner\"\ninterface ThemedStyledSpinnerProps {\n  usingCustomTheme: boolean\n}\n\nexport const ThemedStyledSpinner = styled(Spinner, {\n  shouldForwardProp: isPropValid,\n})<ThemedStyledSpinnerProps>(({ theme, usingCustomTheme }) => {\n  return {\n    fontSize: theme.fontSizes.sm,\n    width: theme.sizes.spinnerSize,\n    height: theme.sizes.spinnerSize,\n    borderWidth: theme.sizes.spinnerThickness,\n    radius: theme.radii.md,\n    justifyContents: \"center\",\n    padding: theme.spacing.none,\n    margin: theme.spacing.none,\n    borderColor: theme.colors.borderColor,\n    borderTopColor: usingCustomTheme\n      ? theme.colors.primary\n      : theme.colors.blue70,\n    flexGrow: 0,\n    flexShrink: 0,\n  }\n})\n\ninterface StyledSpinnerProps {\n  width: number\n  cache: boolean\n}\n\nexport const StyledSpinner = styled.div<StyledSpinnerProps>(\n  ({ theme, width, cache }) => ({\n    width: width,\n    ...(cache\n      ? {\n          paddingBottom: theme.spacing.lg,\n          background: `linear-gradient(to bottom, ${theme.colors.bgColor} 0%, ${theme.colors.bgColor} 80%, transparent 100%)`,\n        }\n      : null),\n  })\n)\n\nexport const StyledSpinnerContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  gap: theme.spacing.sm,\n  alignItems: \"center\",\n  width: \"100%\",\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport classNames from \"classnames\"\n\nimport { isPresetTheme } from \"@streamlit/lib/src/theme\"\nimport { Spinner as SpinnerProto } from \"@streamlit/lib/src/proto\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport { LibContext } from \"@streamlit/lib/src/components/core/LibContext\"\n\nimport {\n  StyledSpinner,\n  StyledSpinnerContainer,\n  ThemedStyledSpinner,\n} from \"./styled-components\"\n\nexport interface SpinnerProps {\n  width: number\n  element: SpinnerProto\n}\n\nfunction Spinner({ width, element }: Readonly<SpinnerProps>): ReactElement {\n  const { activeTheme } = React.useContext(LibContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const { cache } = element\n\n  return (\n    <StyledSpinner\n      className={classNames({ stSpinner: true, stCacheSpinner: cache })}\n      data-testid=\"stSpinner\"\n      width={width}\n      cache={cache}\n    >\n      <StyledSpinnerContainer>\n        <ThemedStyledSpinner usingCustomTheme={usingCustomTheme} />\n        <StreamlitMarkdown source={element.text} allowHTML={false} />\n      </StyledSpinnerContainer>\n    </StyledSpinner>\n  )\n}\n\nexport default Spinner\n"],"names":["ThemedStyledSpinner","Spinner","shouldForwardProp","isPropValid","theme","usingCustomTheme","fontSize","fontSizes","sm","width","sizes","spinnerSize","height","borderWidth","spinnerThickness","radius","radii","md","justifyContents","padding","spacing","none","margin","borderColor","colors","borderTopColor","primary","blue70","flexGrow","flexShrink","StyledSpinner","styled","cache","paddingBottom","lg","background","bgColor","StyledSpinnerContainer","display","gap","alignItems","element","activeTheme","React","useContext","LibContext","isPresetTheme","className","classNames","stSpinner","stCacheSpinner","data-testid","StreamlitMarkdown","source","text","allowHTML"],"mappings":"6GAuBaA,MAAAA,IAA6BC,EAAS,CACjDC,kBAAmBC,mBACrB,CAAA,EAA6B,CAAC,CAAEC,MAAAA,EAAOC,iBAAAA,MAC9B,CACLC,SAAUF,EAAMG,UAAUC,GAC1BC,MAAOL,EAAMM,MAAMC,YACnBC,OAAQR,EAAMM,MAAMC,YACpBE,YAAaT,EAAMM,MAAMI,iBACzBC,OAAQX,EAAMY,MAAMC,GACpBC,gBAAiB,SACjBC,QAASf,EAAMgB,QAAQC,KACvBC,OAAQlB,EAAMgB,QAAQC,KACtBE,YAAanB,EAAMoB,OAAOD,YAC1BE,eAAgBpB,EACZD,EAAMoB,OAAOE,QACbtB,EAAMoB,OAAOG,OACjBC,SAAU,EACVC,WAAY,CAAA,EAEd,EAOWC,IAAgBC,MAAAA,qBAC3B,CAAC,CAAE3B,MAAAA,EAAOK,MAAAA,EAAOuB,MAAAA,MAAa,CAC5BvB,MAAAA,EACA,GAAIuB,EACA,CACEC,cAAe7B,EAAMgB,QAAQc,GAC7BC,WAAY,8BAA8B/B,EAAMoB,OAAOY,OAAO,QAAQhC,EAAMoB,OAAOY,OAAO,yBAAA,EAE5F,IACN,EACD,EAEYC,IAAyBN,MAAAA,kBAAW,CAAA,EAAA,CAAC,CAAE3B,MAAAA,MAAa,CAC/DkC,QAAS,OACTC,IAAKnC,EAAMgB,QAAQZ,GACnBgC,WAAY,SACZ/B,MAAO,MACT,EAAG,EC9BH,SAASR,EAAQ,CAAEQ,MAAAA,EAAOgC,QAAAA,GAAiC,CACzD,KAAM,CAAEC,YAAAA,CAAgBC,EAAAA,EAAMC,WAAWC,CAAAA,EACnCxC,EAAmB,CAACyC,EAAcJ,CAAAA,EAClC,CAAEV,MAAAA,CAAUS,EAAAA,EAElB,SACGX,EAAAA,CACCiB,UAAWC,EAAW,CAAEC,UAAW,GAAMC,eAAgBlB,CAAAA,CAAM,EAC/DmB,cAAY,YACZ1C,MAAAA,EACAuB,MAAAA,EAEA,WAACK,EAAAA,aACErC,EAAAA,CAAoBK,iBAAAA,CAAAA,KACpB+C,EAAAA,CAAkBC,OAAQZ,EAAQa,KAAMC,UAAW,EAAA,OAI5D"}