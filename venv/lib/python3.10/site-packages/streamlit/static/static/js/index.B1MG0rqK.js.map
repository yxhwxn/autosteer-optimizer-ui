{"version":3,"file":"index.B1MG0rqK.js","sources":["../../../../lib/src/components/elements/Toast/styled-components.tsx","../../../../lib/src/components/elements/Toast/Toast.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledViewButton = styled.button(({ theme }) => ({\n  fontSize: theme.fontSizes.sm,\n  lineHeight: theme.lineHeights.base,\n  color: theme.colors.fadedText60,\n  backgroundColor: theme.colors.transparent,\n  fontFamily: \"inherit\",\n  margin: theme.spacing.none,\n  border: \"none\",\n  boxShadow: \"none\",\n  padding: theme.spacing.none,\n  \"&:hover, &:active, &:focus\": {\n    border: \"none\",\n    outline: \"none\",\n    boxShadow: \"none\",\n  },\n  \"&:hover\": {\n    color: theme.colors.primary,\n  },\n}))\n\ninterface StyledToastMessageProps {\n  expanded: boolean\n}\n\nexport const StyledToastWrapper = styled.div<StyledToastMessageProps>(\n  ({ theme }) => ({\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: theme.spacing.lg,\n\n    \"> span\": {\n      marginTop: theme.spacing.twoXS,\n    },\n  })\n)\n\nexport const StyledIcon = styled.div(({ theme }) => ({\n  fontSize: theme.fontSizes.xl,\n}))\n\nexport const StyledMessageWrapper = styled.div(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: theme.spacing.sm,\n  alignItems: \"start\",\n  // Align text to the center of the icon when only 1 line.\n  justifyContent: \"center\",\n  overflow: \"hidden\",\n  minHeight: \"100%\",\n  fontSize: theme.fontSizes.sm,\n  lineHeight: theme.lineHeights.base,\n  div: {\n    display: \"inline-flex\",\n  },\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\n\nimport { withTheme } from \"@emotion/react\"\nimport { toaster, ToastOverrides } from \"baseui/toast\"\n\nimport {\n  EmotionTheme,\n  hasLightBackgroundColor,\n} from \"@streamlit/lib/src/theme\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown\"\nimport { Kind } from \"@streamlit/lib/src/components/shared/AlertContainer\"\nimport AlertElement from \"@streamlit/lib/src/components/elements/AlertElement/AlertElement\"\nimport { DynamicIcon } from \"@streamlit/lib/src/components/shared/Icon\"\n\nimport {\n  StyledMessageWrapper,\n  StyledToastWrapper,\n  StyledViewButton,\n} from \"./styled-components\"\n\nexport interface ToastProps {\n  theme: EmotionTheme\n  body: string\n  icon?: string\n  width: number\n}\n\nfunction generateToastOverrides(theme: EmotionTheme): ToastOverrides {\n  const lightBackground = hasLightBackgroundColor(theme)\n  return {\n    Body: {\n      props: {\n        \"data-testid\": \"stToast\",\n        className: \"stToast\",\n      },\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        gap: theme.spacing.md,\n        width: theme.sizes.toastWidth,\n        marginTop: theme.spacing.sm,\n        // Warnings logged if you use shorthand property here:\n        borderTopLeftRadius: theme.radii.default,\n        borderTopRightRadius: theme.radii.default,\n        borderBottomLeftRadius: theme.radii.default,\n        borderBottomRightRadius: theme.radii.default,\n        paddingTop: theme.spacing.lg,\n        paddingBottom: theme.spacing.lg,\n        paddingLeft: theme.spacing.twoXL,\n        paddingRight: theme.spacing.twoXL,\n        backgroundColor: lightBackground\n          ? theme.colors.gray10\n          : theme.colors.gray90,\n        color: theme.colors.bodyText,\n        // Take standard BaseWeb shadow and adjust for dark backgrounds\n        boxShadow: lightBackground\n          ? \"0px 4px 16px rgba(0, 0, 0, 0.16)\"\n          : \"0px 4px 16px rgba(0, 0, 0, 0.7)\",\n      },\n    },\n    CloseIcon: {\n      style: {\n        color: theme.colors.fadedText40,\n        width: theme.fontSizes.lg,\n        height: theme.fontSizes.lg,\n        marginRight: `calc(-1 * ${theme.spacing.lg} / 2)`,\n        \":hover\": {\n          color: theme.colors.bodyText,\n        },\n      },\n    },\n  }\n}\n\n// Function used to truncate toast messages that are longer than three lines.\nexport function shortenMessage(fullMessage: string): string {\n  const characterLimit = 104\n\n  if (fullMessage.length > characterLimit) {\n    let message = fullMessage.replace(/^(.{104}[^\\s]*).*/, \"$1\")\n\n    if (message.length > characterLimit) {\n      message = message\n        .substring(0, characterLimit)\n        .split(\" \")\n        .slice(0, -1)\n        .join(\" \")\n    }\n\n    return message.trim()\n  }\n\n  return fullMessage\n}\n\nexport function Toast({\n  theme,\n  body,\n  icon,\n  width,\n}: Readonly<ToastProps>): ReactElement {\n  const displayMessage = shortenMessage(body)\n  const shortened = body !== displayMessage\n\n  const [expanded, setExpanded] = useState(!shortened)\n  const [toastKey, setToastKey] = useState<React.Key>(0)\n\n  const handleClick = useCallback((): void => {\n    setExpanded(!expanded)\n  }, [expanded])\n\n  const styleOverrides = useMemo(() => generateToastOverrides(theme), [theme])\n\n  const toastContent = useMemo(\n    () => (\n      <StyledToastWrapper expanded={expanded}>\n        {icon && (\n          <DynamicIcon\n            iconValue={icon}\n            size=\"xl\"\n            testid=\"stToastDynamicIcon\"\n          />\n        )}\n        <StyledMessageWrapper>\n          <StreamlitMarkdown\n            source={expanded ? body : displayMessage}\n            allowHTML={false}\n            isToast\n          />\n          {shortened && (\n            <StyledViewButton\n              data-testid=\"stToastViewButton\"\n              onClick={handleClick}\n            >\n              {expanded ? \"view less\" : \"view more\"}\n            </StyledViewButton>\n          )}\n        </StyledMessageWrapper>\n      </StyledToastWrapper>\n    ),\n    [shortened, expanded, body, icon, displayMessage, handleClick]\n  )\n\n  useEffect(() => {\n    // Handles the error case where st.sidebar.toast is called since\n    // baseweb would throw error anyway (no toast container in sidebar)\n    if (theme.inSidebar) {\n      return\n    }\n\n    // Uses toaster utility to create toast on mount and generate unique key\n    // to reference that toast for update/removal\n    const newKey = toaster.info(toastContent, {\n      overrides: { ...styleOverrides },\n    })\n    setToastKey(newKey)\n\n    return () => {\n      // Disable transition so toast doesn't flicker on removal\n      toaster.update(newKey, {\n        overrides: { Body: { style: { transitionDuration: 0 } } },\n      })\n      // Remove toast on unmount\n      toaster.clear(newKey)\n    }\n\n    // Array must be empty to run as mount/cleanup\n    // TODO: Update to match React best practices\n    // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    // Handles expand/collapse button behavior for long toast messages\n    toaster.update(toastKey, {\n      children: toastContent,\n      overrides: { ...styleOverrides },\n    })\n  }, [toastKey, toastContent, styleOverrides])\n\n  const sidebarErrorMessage = (\n    <AlertElement\n      kind={Kind.ERROR}\n      body=\"Streamlit API Error: `st.toast` cannot be called directly on the sidebar with `st.sidebar.toast`.\n        See our `st.toast` API [docs](https://docs.streamlit.io/develop/api-reference/status/st.toast) for more information.\"\n      width={width}\n    />\n  )\n  return (\n    // Shows error if toast is called on st.sidebar\n    <>{theme.inSidebar && sidebarErrorMessage}</>\n  )\n}\n\nexport default withTheme(Toast)\n"],"names":["StyledViewButton","styled","theme","fontSize","fontSizes","sm","lineHeight","lineHeights","base","color","colors","fadedText60","backgroundColor","transparent","fontFamily","margin","spacing","none","border","boxShadow","padding","outline","primary","StyledToastWrapper","display","flexDirection","gap","lg","marginTop","twoXS","StyledMessageWrapper","alignItems","justifyContent","overflow","minHeight","div","generateToastOverrides","lightBackground","hasLightBackgroundColor","Body","props","className","style","md","width","sizes","toastWidth","borderTopLeftRadius","radii","default","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","paddingTop","paddingBottom","paddingLeft","twoXL","paddingRight","gray10","gray90","bodyText","CloseIcon","fadedText40","height","marginRight","shortenMessage","fullMessage","length","characterLimit","message","replace","substring","split","slice","join","trim","Toast","body","icon","displayMessage","shortened","expanded","setExpanded","useState","toastKey","setToastKey","handleClick","useCallback","styleOverrides","useMemo","toastContent","_jsxs","DynamicIcon","iconValue","size","testid","StreamlitMarkdown","source","allowHTML","isToast","data-testid","onClick","useEffect","inSidebar","newKey","toaster","info","overrides","update","transitionDuration","clear","children","sidebarErrorMessage","AlertElement","kind","Kind","ERROR","_Fragment","withTheme"],"mappings":"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"}