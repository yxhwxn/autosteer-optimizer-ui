{"version":3,"file":"InputInstructions.ChC5isnC.js","sources":["../../../../lib/src/components/shared/InputInstructions/styled-components.ts","../../../../lib/src/components/shared/InputInstructions/InputInstructions.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { keyframes } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\n\nconst blink = keyframes`\n  50% {\n    color: rgba(0, 0, 0, 0);\n  }\n`\n\nexport interface StyledMessageProps {\n  includeDot: boolean\n  shouldBlink: boolean\n}\n\nexport const StyledMessage = styled.span<StyledMessageProps>(\n  ({ includeDot, shouldBlink, theme }) => ({\n    ...(includeDot\n      ? {\n          \"&::before\": {\n            opacity: 1,\n            content: '\"•\"',\n            animation: \"none\",\n            color: theme.colors.gray,\n            margin: `0 ${theme.spacing.twoXS}`,\n          },\n        }\n      : {}),\n    ...(shouldBlink\n      ? {\n          color: theme.colors.red,\n          animationName: `${blink}`,\n          animationDuration: \"0.5s\",\n          animationIterationCount: 5,\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { isFromMac } from \"@streamlit/lib/src/util/utils\"\nimport { StyledWidgetInstructions } from \"@streamlit/lib/src/components/widgets/BaseWidget\"\n\nimport { StyledMessage } from \"./styled-components\"\n\nexport interface Props {\n  dirty: boolean\n  value: string\n  inForm: boolean\n  maxLength?: number\n  className?: string\n  type?: \"multiline\" | \"single\" | \"chat\"\n  allowEnterToSubmit?: boolean\n}\n\nconst InputInstructions = ({\n  dirty,\n  value,\n  inForm,\n  maxLength,\n  className,\n  type = \"single\",\n  allowEnterToSubmit = true,\n}: Props): ReactElement => {\n  const messages: ReactElement[] = []\n  const addMessage = (text: string, shouldBlink = false): void => {\n    messages.push(\n      <StyledMessage\n        key={messages.length}\n        includeDot={messages.length > 0}\n        shouldBlink={shouldBlink}\n      >\n        {text}\n      </StyledMessage>\n    )\n  }\n\n  // Show enter instruction if not a form or form allows Enter to submit\n  if (allowEnterToSubmit) {\n    const toSubmitFormOrApplyText = inForm ? \"submit form\" : \"apply\"\n    if (type === \"multiline\") {\n      const commandKey = isFromMac() ? \"⌘\" : \"Ctrl\"\n      addMessage(`Press ${commandKey}+Enter to ${toSubmitFormOrApplyText}`)\n    } else if (type === \"single\") {\n      addMessage(`Press Enter to ${toSubmitFormOrApplyText}`)\n    }\n  }\n\n  if (maxLength && (type !== \"chat\" || dirty)) {\n    addMessage(\n      `${value.length}/${maxLength}`,\n      dirty && value.length >= maxLength\n    )\n  }\n\n  return (\n    <StyledWidgetInstructions\n      data-testid=\"InputInstructions\"\n      className={className}\n    >\n      {messages}\n    </StyledWidgetInstructions>\n  )\n}\n\nexport default InputInstructions\n"],"names":["blink","keyframes","StyledMessage","styled","includeDot","shouldBlink","theme","opacity","content","animation","color","colors","gray","margin","spacing","twoXS","red","animationName","animationDuration","animationIterationCount","InputInstructions","dirty","value","inForm","maxLength","className","type","allowEnterToSubmit","messages","addMessage","text","push","length","toSubmitFormOrApplyText","commandKey","isFromMac","StyledWidgetInstructions","data-testid"],"mappings":"sEAmBA,MAAMA,IAAQC,2BAAAA,EAWDC,IAAgBC,OAAAA,qBAC3B,CAAC,CAAEC,WAAAA,EAAYC,YAAAA,EAAaC,MAAAA,MAAa,CACvC,GAAIF,EACA,CACE,YAAa,CACXG,QAAS,EACTC,QAAS,MACTC,UAAW,OACXC,MAAOJ,EAAMK,OAAOC,KACpBC,OAAQ,KAAKP,EAAMQ,QAAQC,KAAK,EAClC,CAAA,EAEF,CAAC,EACL,GAAIV,EACA,CACEK,MAAOJ,EAAMK,OAAOK,IACpBC,cAAe,GAAGjB,CAAAA,GAClBkB,kBAAmB,OACnBC,wBAAyB,CAAA,EAE3B,CAAC,CACP,EACD,ECnBKC,EAAoB,CAAC,CACzBC,MAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,KAAAA,EAAO,SACPC,mBAAAA,EAAqB,EAAA,IACf,CACN,MAAMC,EAA2B,CAAA,EAC3BC,EAAa,CAACC,EAAczB,EAAc,KAAK,CAC1C0B,EAAAA,OACN7B,EAAAA,CAECE,WAAYwB,EAASI,OAAS,EAC9B3B,YAAAA,EAECyB,SAAAA,CAAAA,EAJIF,EAASI,MAAM,CAAA,CAAA,EAU1B,GAAIL,EAAoB,CAChBM,MAAAA,EAA0BV,EAAS,cAAgB,QACzD,GAAIG,IAAS,YAAa,CAClBQ,MAAAA,EAAaC,IAAc,IAAM,OACvCN,EAAW,SAASK,cAAuBD,GAAyB,CAAA,MAC3DP,IAAS,UACPG,EAAA,kBAAkBI,CAAAA,EAAyB,CAE1D,CAEIT,OAAAA,IAAcE,IAAS,QAAUL,IAEjCQ,EAAA,GAAGP,EAAMU,MAAM,IAAIR,CAAAA,GACnBH,GAASC,EAAMU,QAAUR,CAAAA,IAK1BY,EAAAA,CACCC,cAAY,oBACZZ,UAAAA,EAECG,SAAAA,CAAAA,EAGP"}